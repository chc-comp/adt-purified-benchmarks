(set-logic HORN)
(declare-datatypes ((Nat_0 0)) (((Z_0 ) (S_0 (unS_0 Nat_0)))))
(declare-fun diseqNat_0 (Nat_0 Nat_0) Bool)
(declare-fun unS_1 (Nat_0 Nat_0) Bool)
(declare-fun isZ_0 (Nat_0) Bool)
(declare-fun isS_0 (Nat_0) Bool)
(assert (forall ((x_39 Nat_0) (x_38 Nat_0))
	(=> (= x_39 (S_0 x_38))
	    (unS_1 x_38 x_39))))
(assert (isZ_0 Z_0))
(assert (forall ((x_40 Nat_0))
	(isS_0 (S_0 x_40))))
(assert (forall ((x_41 Nat_0))
	(diseqNat_0 Z_0 (S_0 x_41))))
(assert (forall ((x_42 Nat_0))
	(diseqNat_0 (S_0 x_42) Z_0)))
(assert (forall ((x_43 Nat_0) (x_44 Nat_0))
	(=> (diseqNat_0 x_43 x_44)
	    (diseqNat_0 (S_0 x_43) (S_0 x_44)))))
(declare-fun add_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun minus_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun le_0 (Nat_0 Nat_0) Bool)
(declare-fun ge_0 (Nat_0 Nat_0) Bool)
(declare-fun lt_0 (Nat_0 Nat_0) Bool)
(declare-fun gt_0 (Nat_0 Nat_0) Bool)
(declare-fun mult_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun div_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun mod_0 (Nat_0 Nat_0 Nat_0) Bool)
(assert (forall ((y_0 Nat_0))
	(add_0 y_0 Z_0 y_0)))
(assert (forall ((x_34 Nat_0) (y_0 Nat_0) (r_0 Nat_0))
	(=> (add_0 r_0 x_34 y_0)
	    (add_0 (S_0 r_0) (S_0 x_34) y_0))))
(assert (forall ((y_0 Nat_0))
	(minus_0 Z_0 Z_0 y_0)))
(assert (forall ((x_34 Nat_0) (y_0 Nat_0) (r_0 Nat_0))
	(=> (minus_0 r_0 x_34 y_0)
	    (minus_0 (S_0 r_0) (S_0 x_34) y_0))))
(assert (forall ((y_0 Nat_0))
	(le_0 Z_0 y_0)))
(assert (forall ((x_34 Nat_0) (y_0 Nat_0))
	(=> (le_0 x_34 y_0)
	    (le_0 (S_0 x_34) (S_0 y_0)))))
(assert (forall ((y_0 Nat_0))
	(ge_0 y_0 Z_0)))
(assert (forall ((x_34 Nat_0) (y_0 Nat_0))
	(=> (ge_0 x_34 y_0)
	    (ge_0 (S_0 x_34) (S_0 y_0)))))
(assert (forall ((y_0 Nat_0))
	(lt_0 Z_0 (S_0 y_0))))
(assert (forall ((x_34 Nat_0) (y_0 Nat_0))
	(=> (lt_0 x_34 y_0)
	    (lt_0 (S_0 x_34) (S_0 y_0)))))
(assert (forall ((y_0 Nat_0))
	(gt_0 (S_0 y_0) Z_0)))
(assert (forall ((x_34 Nat_0) (y_0 Nat_0))
	(=> (gt_0 x_34 y_0)
	    (gt_0 (S_0 x_34) (S_0 y_0)))))
(assert (forall ((y_0 Nat_0))
	(mult_0 Z_0 Z_0 y_0)))
(assert (forall ((x_34 Nat_0) (y_0 Nat_0) (r_0 Nat_0) (z_1 Nat_0))
	(=>	(and (mult_0 r_0 x_34 y_0)
			(add_0 z_1 r_0 y_0))
		(mult_0 z_1 (S_0 x_34) y_0))))
(assert (forall ((x_34 Nat_0) (y_0 Nat_0))
	(=> (lt_0 x_34 y_0)
	    (div_0 Z_0 x_34 y_0))))
(assert (forall ((x_34 Nat_0) (y_0 Nat_0) (r_0 Nat_0) (z_1 Nat_0))
	(=>	(and (ge_0 x_34 y_0)
			(minus_0 z_1 x_34 y_0)
			(div_0 r_0 z_1 y_0))
		(div_0 (S_0 r_0) x_34 y_0))))
(assert (forall ((x_34 Nat_0) (y_0 Nat_0))
	(=> (lt_0 x_34 y_0)
	    (mod_0 x_34 x_34 y_0))))
(assert (forall ((x_34 Nat_0) (y_0 Nat_0) (r_0 Nat_0) (z_1 Nat_0))
	(=>	(and (ge_0 x_34 y_0)
			(minus_0 z_1 x_34 y_0)
			(mod_0 r_0 z_1 y_0))
		(mod_0 r_0 x_34 y_0))))
(declare-fun and_0 (Bool Bool Bool) Bool)
(declare-fun or_0 (Bool Bool Bool) Bool)
(declare-fun hence_0 (Bool Bool Bool) Bool)
(declare-fun not_0 (Bool Bool) Bool)
(assert (and_0 false false false))
(assert (and_0 false true false))
(assert (and_0 false false true))
(assert (and_0 true true true))
(assert (or_0 false false false))
(assert (or_0 true true false))
(assert (or_0 true false true))
(assert (or_0 true true true))
(assert (hence_0 true false false))
(assert (hence_0 false true false))
(assert (hence_0 true false true))
(assert (hence_0 true true true))
(assert (not_0 true false))
(assert (not_0 false true))
(declare-datatypes ((MutInt_0 0)) (((mutInt_1 (curInt_0 Nat_0) (retInt_0 Nat_0)))))
(declare-fun diseqMutInt_0 (MutInt_0 MutInt_0) Bool)
(declare-fun curInt_1 (Nat_0 MutInt_0) Bool)
(declare-fun retInt_1 (Nat_0 MutInt_0) Bool)
(declare-fun ismutInt_0 (MutInt_0) Bool)
(assert (forall ((x_47 MutInt_0) (x_45 Nat_0) (x_46 Nat_0))
	(=> (= x_47 (mutInt_1 x_45 x_46))
	    (curInt_1 x_45 x_47))))
(assert (forall ((x_47 MutInt_0) (x_45 Nat_0) (x_46 Nat_0))
	(=> (= x_47 (mutInt_1 x_45 x_46))
	    (retInt_1 x_46 x_47))))
(assert (forall ((x_48 Nat_0) (x_49 Nat_0))
	(ismutInt_0 (mutInt_1 x_48 x_49))))
(assert (forall ((x_50 Nat_0) (x_51 Nat_0) (x_52 Nat_0) (x_53 Nat_0))
	(=> (diseqNat_0 x_50 x_52)
	    (diseqMutInt_0 (mutInt_1 x_50 x_51) (mutInt_1 x_52 x_53)))))
(assert (forall ((x_50 Nat_0) (x_51 Nat_0) (x_52 Nat_0) (x_53 Nat_0))
	(=> (diseqNat_0 x_51 x_53)
	    (diseqMutInt_0 (mutInt_1 x_50 x_51) (mutInt_1 x_52 x_53)))))
(declare-datatypes ((MutMutInt_0 0)) (((mutMutInt_1 (curMutInt_0 MutInt_0) (retMutInt_0 MutInt_0)))))
(declare-fun diseqMutMutInt_0 (MutMutInt_0 MutMutInt_0) Bool)
(declare-fun curMutInt_1 (MutInt_0 MutMutInt_0) Bool)
(declare-fun retMutInt_1 (MutInt_0 MutMutInt_0) Bool)
(declare-fun ismutMutInt_0 (MutMutInt_0) Bool)
(assert (forall ((x_56 MutMutInt_0) (x_54 MutInt_0) (x_55 MutInt_0))
	(=> (= x_56 (mutMutInt_1 x_54 x_55))
	    (curMutInt_1 x_54 x_56))))
(assert (forall ((x_56 MutMutInt_0) (x_54 MutInt_0) (x_55 MutInt_0))
	(=> (= x_56 (mutMutInt_1 x_54 x_55))
	    (retMutInt_1 x_55 x_56))))
(assert (forall ((x_57 MutInt_0) (x_58 MutInt_0))
	(ismutMutInt_0 (mutMutInt_1 x_57 x_58))))
(assert (forall ((x_59 MutInt_0) (x_60 MutInt_0) (x_61 MutInt_0) (x_62 MutInt_0))
	(=> (diseqMutInt_0 x_59 x_61)
	    (diseqMutMutInt_0 (mutMutInt_1 x_59 x_60) (mutMutInt_1 x_61 x_62)))))
(assert (forall ((x_59 MutInt_0) (x_60 MutInt_0) (x_61 MutInt_0) (x_62 MutInt_0))
	(=> (diseqMutInt_0 x_60 x_62)
	    (diseqMutMutInt_0 (mutMutInt_1 x_59 x_60) (mutMutInt_1 x_61 x_62)))))
(declare-fun main_0 (Bool) Bool)
(declare-fun main_1 (Bool Bool) Bool)
(declare-fun swapdec_0 (MutMutInt_0 MutMutInt_0) Bool)
(declare-fun mayswapMutInt_0 (MutMutInt_0 MutMutInt_0) Bool)
(declare-fun mayswapMutInt_1 (MutMutInt_0 MutMutInt_0 Bool) Bool)
(declare-fun swapdec_1 (MutMutInt_0 MutMutInt_0 Bool) Bool)
(assert (forall ((x_0 Bool) (x_1 Nat_0) (x_2 Nat_0) (x_3 Nat_0) (x_4 Nat_0) (x_5 MutInt_0) (x_6 MutInt_0) (x_7 MutInt_0) (x_8 MutInt_0) (x_32 Bool) (x_63 Nat_0) (x_64 Nat_0) (x_65 Nat_0) (x_66 Nat_0))
	(=>	(and (swapdec_0 (mutMutInt_1 (mutInt_1 x_1 x_3) x_6) (mutMutInt_1 (mutInt_1 x_2 x_4) x_8))
			(= x_7 x_8)
			(= x_5 x_6)
			(= x_63 x_64)
			(= x_65 x_66)
			(main_1 x_32 x_0)
			(ge_0 x_1 x_3)
			(not_0 x_32 true)
			(retInt_1 x_63 x_5)
			(curInt_1 x_64 x_5)
			(retInt_1 x_65 x_7)
			(curInt_1 x_66 x_7))
		(main_0 x_0))))
(assert (forall ((x_0 Bool) (x_1 Nat_0) (x_2 Nat_0) (x_3 Nat_0) (x_4 Nat_0) (x_5 MutInt_0) (x_6 MutInt_0) (x_7 MutInt_0) (x_8 MutInt_0) (x_33 Bool) (x_67 Nat_0) (x_68 Nat_0) (x_69 Nat_0) (x_70 Nat_0))
	(=>	(and (swapdec_0 (mutMutInt_1 (mutInt_1 x_1 x_3) x_6) (mutMutInt_1 (mutInt_1 x_2 x_4) x_8))
			(= x_7 x_8)
			(= x_5 x_6)
			(= x_67 x_68)
			(= x_69 x_70)
			(main_1 x_33 x_0)
			(lt_0 x_1 x_3)
			(not_0 x_33 false)
			(retInt_1 x_67 x_5)
			(curInt_1 x_68 x_5)
			(retInt_1 x_69 x_7)
			(curInt_1 x_70 x_7))
		(main_0 x_0))))
(assert (forall ((x_9 Bool))
	(=> (= x_9 false)
	    (main_1 false x_9))))
(assert (forall ((x_10 Bool))
	(=> (= x_10 true)
	    (main_1 true x_10))))
(assert (forall ((x_11 MutMutInt_0) (x_12 MutMutInt_0) (x_13 Bool))
	(=> (mayswapMutInt_1 x_11 x_12 x_13)
	    (mayswapMutInt_0 x_11 x_12))))
(assert (forall ((x_14 MutMutInt_0) (x_15 MutMutInt_0) (x_71 MutInt_0) (x_72 MutInt_0) (x_73 MutInt_0) (x_74 MutInt_0))
	(=>	(and (= x_71 x_72)
			(= x_73 x_74)
			(retMutInt_1 x_71 x_14)
			(curMutInt_1 x_72 x_14)
			(retMutInt_1 x_73 x_15)
			(curMutInt_1 x_74 x_15))
		(mayswapMutInt_1 x_14 x_15 false))))
(assert (forall ((x_16 MutMutInt_0) (x_17 MutMutInt_0) (x_18 MutInt_0) (x_19 MutInt_0) (x_75 MutInt_0) (x_76 MutInt_0) (x_77 MutInt_0) (x_78 MutInt_0))
	(=>	(and (= x_19 x_75)
			(= x_18 x_76)
			(= x_77 x_18)
			(= x_78 x_19)
			(curMutInt_1 x_75 x_16)
			(curMutInt_1 x_76 x_17)
			(retMutInt_1 x_77 x_16)
			(retMutInt_1 x_78 x_17))
		(mayswapMutInt_1 x_16 x_17 true))))
(assert (forall ((x_20 MutMutInt_0) (x_21 MutMutInt_0) (x_22 Bool) (x_23 MutInt_0) (x_24 MutInt_0) (x_79 MutInt_0) (x_80 MutInt_0) (x_81 MutInt_0) (x_82 MutInt_0))
	(=>	(and (mayswapMutInt_0 (mutMutInt_1 x_79 x_23) (mutMutInt_1 x_80 x_24))
			(swapdec_1 (mutMutInt_1 x_23 x_81) (mutMutInt_1 x_24 x_82) x_22)
			(curMutInt_1 x_79 x_20)
			(curMutInt_1 x_80 x_21)
			(retMutInt_1 x_81 x_20)
			(retMutInt_1 x_82 x_21))
		(swapdec_0 x_20 x_21))))
(assert (forall ((x_25 MutMutInt_0) (x_26 MutMutInt_0) (x_27 MutInt_0) (x_28 MutInt_0) (a_2 MutInt_0) (a_3 MutInt_0) (x_35 Nat_0) (x_36 Nat_0) (x_83 MutInt_0) (x_84 MutInt_0) (x_85 MutInt_0) (x_86 Nat_0) (x_87 MutInt_0) (x_88 Nat_0) (x_89 MutInt_0) (x_90 Nat_0) (x_91 MutInt_0) (x_92 Nat_0))
	(=>	(and (swapdec_0 (mutMutInt_1 a_2 x_27) (mutMutInt_1 a_3 x_28))
			(= x_83 x_27)
			(= x_84 x_28)
			(= a_2 (mutInt_1 x_35 x_86))
			(= a_3 (mutInt_1 x_36 x_88))
			(minus_0 x_35 x_90 (S_0 Z_0))
			(minus_0 x_36 x_92 (S_0 (S_0 Z_0)))
			(retMutInt_1 x_83 x_25)
			(retMutInt_1 x_84 x_26)
			(curMutInt_1 x_85 x_25)
			(retInt_1 x_86 x_85)
			(curMutInt_1 x_87 x_26)
			(retInt_1 x_88 x_87)
			(curMutInt_1 x_89 x_25)
			(curInt_1 x_90 x_89)
			(curMutInt_1 x_91 x_26)
			(curInt_1 x_92 x_91))
		(swapdec_1 x_25 x_26 false))))
(assert (forall ((x_29 MutMutInt_0) (x_30 MutMutInt_0) (x_93 MutInt_0) (x_94 MutInt_0) (x_95 MutInt_0) (x_96 MutInt_0))
	(=>	(and (= x_93 x_94)
			(= x_95 x_96)
			(retMutInt_1 x_93 x_30)
			(curMutInt_1 x_94 x_30)
			(retMutInt_1 x_95 x_29)
			(curMutInt_1 x_96 x_29))
		(swapdec_1 x_29 x_30 true))))
(assert (forall ((x_31 Nat_0))
	(=> (main_0 true)
	    false)))
(check-sat)
