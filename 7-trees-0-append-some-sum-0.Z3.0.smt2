(set-logic HORN)
(declare-datatypes ((Nat_0 0)) (((Z_0 ) (S_0 (unS_0 Nat_0)))))
(declare-fun diseqNat_0 (Nat_0 Nat_0) Bool)
(declare-fun unS_1 (Nat_0 Nat_0) Bool)
(declare-fun isZ_0 (Nat_0) Bool)
(declare-fun isS_0 (Nat_0) Bool)
(assert (forall ((x_125 Nat_0) (x_124 Nat_0))
	(=> (= x_125 (S_0 x_124))
	    (unS_1 x_124 x_125))))
(assert (isZ_0 Z_0))
(assert (forall ((x_126 Nat_0))
	(isS_0 (S_0 x_126))))
(assert (forall ((x_127 Nat_0))
	(diseqNat_0 Z_0 (S_0 x_127))))
(assert (forall ((x_128 Nat_0))
	(diseqNat_0 (S_0 x_128) Z_0)))
(assert (forall ((x_129 Nat_0) (x_130 Nat_0))
	(=> (diseqNat_0 x_129 x_130)
	    (diseqNat_0 (S_0 x_129) (S_0 x_130)))))
(declare-fun add_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun minus_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun le_0 (Nat_0 Nat_0) Bool)
(declare-fun ge_0 (Nat_0 Nat_0) Bool)
(declare-fun lt_0 (Nat_0 Nat_0) Bool)
(declare-fun gt_0 (Nat_0 Nat_0) Bool)
(declare-fun mult_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun div_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun mod_0 (Nat_0 Nat_0 Nat_0) Bool)
(assert (forall ((y_0 Nat_0))
	(add_0 y_0 Z_0 y_0)))
(assert (forall ((x_116 Nat_0) (y_0 Nat_0) (r_0 Nat_0))
	(=> (add_0 r_0 x_116 y_0)
	    (add_0 (S_0 r_0) (S_0 x_116) y_0))))
(assert (forall ((y_0 Nat_0))
	(minus_0 Z_0 Z_0 y_0)))
(assert (forall ((x_116 Nat_0) (y_0 Nat_0) (r_0 Nat_0))
	(=> (minus_0 r_0 x_116 y_0)
	    (minus_0 (S_0 r_0) (S_0 x_116) y_0))))
(assert (forall ((y_0 Nat_0))
	(le_0 Z_0 y_0)))
(assert (forall ((x_116 Nat_0) (y_0 Nat_0))
	(=> (le_0 x_116 y_0)
	    (le_0 (S_0 x_116) (S_0 y_0)))))
(assert (forall ((y_0 Nat_0))
	(ge_0 y_0 Z_0)))
(assert (forall ((x_116 Nat_0) (y_0 Nat_0))
	(=> (ge_0 x_116 y_0)
	    (ge_0 (S_0 x_116) (S_0 y_0)))))
(assert (forall ((y_0 Nat_0))
	(lt_0 Z_0 (S_0 y_0))))
(assert (forall ((x_116 Nat_0) (y_0 Nat_0))
	(=> (lt_0 x_116 y_0)
	    (lt_0 (S_0 x_116) (S_0 y_0)))))
(assert (forall ((y_0 Nat_0))
	(gt_0 (S_0 y_0) Z_0)))
(assert (forall ((x_116 Nat_0) (y_0 Nat_0))
	(=> (gt_0 x_116 y_0)
	    (gt_0 (S_0 x_116) (S_0 y_0)))))
(assert (forall ((y_0 Nat_0))
	(mult_0 Z_0 Z_0 y_0)))
(assert (forall ((x_116 Nat_0) (y_0 Nat_0) (r_0 Nat_0) (z_1 Nat_0))
	(=>	(and (mult_0 r_0 x_116 y_0)
			(add_0 z_1 r_0 y_0))
		(mult_0 z_1 (S_0 x_116) y_0))))
(assert (forall ((x_116 Nat_0) (y_0 Nat_0))
	(=> (lt_0 x_116 y_0)
	    (div_0 Z_0 x_116 y_0))))
(assert (forall ((x_116 Nat_0) (y_0 Nat_0) (r_0 Nat_0) (z_1 Nat_0))
	(=>	(and (ge_0 x_116 y_0)
			(minus_0 z_1 x_116 y_0)
			(div_0 r_0 z_1 y_0))
		(div_0 (S_0 r_0) x_116 y_0))))
(assert (forall ((x_116 Nat_0) (y_0 Nat_0))
	(=> (lt_0 x_116 y_0)
	    (mod_0 x_116 x_116 y_0))))
(assert (forall ((x_116 Nat_0) (y_0 Nat_0) (r_0 Nat_0) (z_1 Nat_0))
	(=>	(and (ge_0 x_116 y_0)
			(minus_0 z_1 x_116 y_0)
			(mod_0 r_0 z_1 y_0))
		(mod_0 r_0 x_116 y_0))))
(declare-fun and_0 (Bool Bool Bool) Bool)
(declare-fun or_0 (Bool Bool Bool) Bool)
(declare-fun hence_0 (Bool Bool Bool) Bool)
(declare-fun not_0 (Bool Bool) Bool)
(assert (and_0 false false false))
(assert (and_0 false true false))
(assert (and_0 false false true))
(assert (and_0 true true true))
(assert (or_0 false false false))
(assert (or_0 true true false))
(assert (or_0 true false true))
(assert (or_0 true true true))
(assert (hence_0 true false false))
(assert (hence_0 false true false))
(assert (hence_0 true false true))
(assert (hence_0 true true true))
(assert (not_0 true false))
(assert (not_0 false true))
(declare-datatypes ((Tree_0 0)) (((Tree_1 (Tree_2 Tree_0) (Tree_3 Nat_0) (Tree_4 Tree_0)) (Tree_5 ))))
(declare-fun diseqTree_0 (Tree_0 Tree_0) Bool)
(declare-fun Tree_6 (Tree_0 Tree_0) Bool)
(declare-fun Tree_7 (Nat_0 Tree_0) Bool)
(declare-fun Tree_8 (Tree_0 Tree_0) Bool)
(declare-fun isTree_0 (Tree_0) Bool)
(declare-fun isTree_1 (Tree_0) Bool)
(assert (forall ((x_134 Tree_0) (x_131 Tree_0) (x_132 Nat_0) (x_133 Tree_0))
	(=> (= x_134 (Tree_1 x_131 x_132 x_133))
	    (Tree_6 x_131 x_134))))
(assert (forall ((x_134 Tree_0) (x_131 Tree_0) (x_132 Nat_0) (x_133 Tree_0))
	(=> (= x_134 (Tree_1 x_131 x_132 x_133))
	    (Tree_7 x_132 x_134))))
(assert (forall ((x_134 Tree_0) (x_131 Tree_0) (x_132 Nat_0) (x_133 Tree_0))
	(=> (= x_134 (Tree_1 x_131 x_132 x_133))
	    (Tree_8 x_133 x_134))))
(assert (forall ((x_136 Tree_0) (x_137 Nat_0) (x_138 Tree_0))
	(isTree_0 (Tree_1 x_136 x_137 x_138))))
(assert (isTree_1 Tree_5))
(assert (forall ((x_139 Tree_0) (x_140 Nat_0) (x_141 Tree_0))
	(diseqTree_0 (Tree_1 x_139 x_140 x_141) Tree_5)))
(assert (forall ((x_142 Tree_0) (x_143 Nat_0) (x_144 Tree_0))
	(diseqTree_0 Tree_5 (Tree_1 x_142 x_143 x_144))))
(assert (forall ((x_145 Tree_0) (x_146 Nat_0) (x_147 Tree_0) (x_148 Tree_0) (x_149 Nat_0) (x_150 Tree_0))
	(=> (diseqTree_0 x_145 x_148)
	    (diseqTree_0 (Tree_1 x_145 x_146 x_147) (Tree_1 x_148 x_149 x_150)))))
(assert (forall ((x_145 Tree_0) (x_146 Nat_0) (x_147 Tree_0) (x_148 Tree_0) (x_149 Nat_0) (x_150 Tree_0))
	(=> (diseqNat_0 x_146 x_149)
	    (diseqTree_0 (Tree_1 x_145 x_146 x_147) (Tree_1 x_148 x_149 x_150)))))
(assert (forall ((x_145 Tree_0) (x_146 Nat_0) (x_147 Tree_0) (x_148 Tree_0) (x_149 Nat_0) (x_150 Tree_0))
	(=> (diseqTree_0 x_147 x_150)
	    (diseqTree_0 (Tree_1 x_145 x_146 x_147) (Tree_1 x_148 x_149 x_150)))))
(declare-datatypes ((MutInt_0 0)) (((mutInt_1 (curInt_0 Nat_0) (retInt_0 Nat_0)))))
(declare-fun diseqMutInt_0 (MutInt_0 MutInt_0) Bool)
(declare-fun curInt_1 (Nat_0 MutInt_0) Bool)
(declare-fun retInt_1 (Nat_0 MutInt_0) Bool)
(declare-fun ismutInt_0 (MutInt_0) Bool)
(assert (forall ((x_153 MutInt_0) (x_151 Nat_0) (x_152 Nat_0))
	(=> (= x_153 (mutInt_1 x_151 x_152))
	    (curInt_1 x_151 x_153))))
(assert (forall ((x_153 MutInt_0) (x_151 Nat_0) (x_152 Nat_0))
	(=> (= x_153 (mutInt_1 x_151 x_152))
	    (retInt_1 x_152 x_153))))
(assert (forall ((x_154 Nat_0) (x_155 Nat_0))
	(ismutInt_0 (mutInt_1 x_154 x_155))))
(assert (forall ((x_156 Nat_0) (x_157 Nat_0) (x_158 Nat_0) (x_159 Nat_0))
	(=> (diseqNat_0 x_156 x_158)
	    (diseqMutInt_0 (mutInt_1 x_156 x_157) (mutInt_1 x_158 x_159)))))
(assert (forall ((x_156 Nat_0) (x_157 Nat_0) (x_158 Nat_0) (x_159 Nat_0))
	(=> (diseqNat_0 x_157 x_159)
	    (diseqMutInt_0 (mutInt_1 x_156 x_157) (mutInt_1 x_158 x_159)))))
(declare-datatypes ((MutTree_0 0)) (((mutTree_1 (curTree_0 Tree_0) (retTree_0 Tree_0)))))
(declare-fun diseqMutTree_0 (MutTree_0 MutTree_0) Bool)
(declare-fun curTree_1 (Tree_0 MutTree_0) Bool)
(declare-fun retTree_1 (Tree_0 MutTree_0) Bool)
(declare-fun ismutTree_0 (MutTree_0) Bool)
(assert (forall ((x_162 MutTree_0) (x_160 Tree_0) (x_161 Tree_0))
	(=> (= x_162 (mutTree_1 x_160 x_161))
	    (curTree_1 x_160 x_162))))
(assert (forall ((x_162 MutTree_0) (x_160 Tree_0) (x_161 Tree_0))
	(=> (= x_162 (mutTree_1 x_160 x_161))
	    (retTree_1 x_161 x_162))))
(assert (forall ((x_163 Tree_0) (x_164 Tree_0))
	(ismutTree_0 (mutTree_1 x_163 x_164))))
(assert (forall ((x_165 Tree_0) (x_166 Tree_0) (x_167 Tree_0) (x_168 Tree_0))
	(=> (diseqTree_0 x_165 x_167)
	    (diseqMutTree_0 (mutTree_1 x_165 x_166) (mutTree_1 x_167 x_168)))))
(assert (forall ((x_165 Tree_0) (x_166 Tree_0) (x_167 Tree_0) (x_168 Tree_0))
	(=> (diseqTree_0 x_166 x_168)
	    (diseqMutTree_0 (mutTree_1 x_165 x_166) (mutTree_1 x_167 x_168)))))
(declare-fun appendsomeabs_0 (MutTree_0 Tree_0 Nat_0 Nat_0 Nat_0) Bool)
(declare-fun appendsomeabs_1 (MutTree_0 Tree_0 Nat_0 Nat_0 Nat_0) Bool)
(declare-fun sum_0 (Tree_0 Nat_0) Bool)
(declare-fun appendsomeabs_2 (MutTree_0 Tree_0 MutTree_0 MutInt_0 MutTree_0 Bool Nat_0 Nat_0 Nat_0 Nat_0 Nat_0 Nat_0 Nat_0) Bool)
(declare-fun main_0 (Bool) Bool)
(declare-fun mainabs_0 (Tree_0 Tree_0 Bool Bool Nat_0 Nat_0) Bool)
(declare-fun sum_1 (Tree_0 Nat_0) Bool)
(declare-fun sum_2 (Nat_0 Tree_0) Bool)
(assert (forall ((x_0 Tree_0) (x_51 Nat_0))
	(=>	(and (= x_51 Z_0)
			(= x_0 Tree_5))
		(sum_2 x_51 x_0))))
(assert (forall ((x_0 Tree_0) (x_52 Nat_0) (x_53 Nat_0) (x_54 Nat_0) (x_117 Nat_0) (x_118 Nat_0) (x_169 Tree_0) (x_170 Tree_0) (x_171 Nat_0))
	(=>	(and (= x_52 x_118)
			(sum_2 x_53 x_169)
			(sum_2 x_54 x_170)
			(diseqTree_0 x_0 Tree_5)
			(add_0 x_117 x_171 x_53)
			(add_0 x_118 x_117 x_54)
			(Tree_6 x_169 x_0)
			(Tree_8 x_170 x_0)
			(Tree_7 x_171 x_0))
		(sum_2 x_52 x_0))))
(assert (forall ((x_1 Tree_0) (x_2 MutTree_0) (c_0 Nat_0) (c_1 Nat_0) (c_2 Nat_0) (c_3 Nat_0) (c_4 Nat_0) (c_5 Nat_0) (x_55 Nat_0) (x_56 Nat_0) (x_57 Nat_0) (x_58 Nat_0) (x_59 Nat_0) (x_60 Nat_0) (x_172 Tree_0) (x_173 Tree_0) (x_174 Tree_0) (x_175 Tree_0) (x_176 Tree_0) (x_177 Tree_0) (x_178 Tree_0) (x_179 Tree_0))
	(=>	(and (= x_55 c_0)
			(sum_0 x_1 c_0)
			(= x_56 c_1)
			(sum_0 x_172 c_1)
			(= x_57 c_2)
			(sum_0 x_173 c_2)
			(= x_58 c_3)
			(sum_0 x_1 c_3)
			(= x_59 c_4)
			(sum_0 x_174 c_4)
			(= x_60 c_5)
			(sum_0 x_175 c_5)
			(appendsomeabs_1 x_2 x_1 c_3 c_4 c_5)
			(sum_2 x_55 x_1)
			(sum_2 x_56 x_176)
			(sum_2 x_57 x_177)
			(sum_2 x_58 x_1)
			(sum_2 x_59 x_178)
			(sum_2 x_60 x_179)
			(curTree_1 x_172 x_2)
			(retTree_1 x_173 x_2)
			(curTree_1 x_174 x_2)
			(retTree_1 x_175 x_2)
			(curTree_1 x_176 x_2)
			(retTree_1 x_177 x_2)
			(curTree_1 x_178 x_2)
			(retTree_1 x_179 x_2))
		(appendsomeabs_0 x_2 x_1 c_0 c_1 c_2))))
(assert (forall ((x_3 Tree_0) (x_4 Nat_0) (x_5 Tree_0) (x_6 Tree_0) (x_7 Nat_0) (x_8 Tree_0) (x_9 Bool) (x_10 Tree_0) (x_11 MutTree_0) (c_6 Nat_0) (c_7 Nat_0) (c_8 Nat_0) (c_9 Nat_0) (c_10 Nat_0) (c_11 Nat_0) (c_12 Nat_0) (c_13 Nat_0) (c_14 Nat_0) (c_15 Nat_0) (x_61 Nat_0) (x_62 Nat_0) (x_63 Nat_0) (x_64 Nat_0) (x_65 Nat_0) (x_66 Nat_0) (x_67 Nat_0) (x_68 Nat_0) (x_69 Nat_0) (x_70 Nat_0) (x_185 Tree_0) (x_180 Tree_0) (x_181 Tree_0) (x_182 Tree_0) (x_183 Tree_0) (x_184 Tree_0))
	(=>	(and (retTree_1 x_185 x_11)
			(= x_61 c_6)
			(sum_0 x_10 c_6)
			(= x_62 c_7)
			(sum_0 (Tree_1 x_5 x_4 x_3) c_7)
			(= x_63 c_8)
			(sum_0 x_180 c_8)
			(= x_64 c_9)
			(sum_0 x_10 c_9)
			(= x_65 c_10)
			(sum_0 (Tree_1 x_8 x_7 x_6) c_10)
			(= x_66 c_11)
			(sum_0 x_181 c_11)
			(= x_67 c_12)
			(sum_0 x_5 c_12)
			(= x_68 c_13)
			(sum_0 x_8 c_13)
			(= x_69 c_14)
			(sum_0 x_3 c_14)
			(= x_70 c_15)
			(sum_0 x_6 c_15)
			(appendsomeabs_2 (mutTree_1 (Tree_1 x_8 x_7 x_6) x_182) x_10 (mutTree_1 x_5 x_8) (mutInt_1 x_4 x_7) (mutTree_1 x_3 x_6) x_9 c_9 c_10 c_11 c_12 c_13 c_14 c_15)
			(sum_2 x_61 x_10)
			(sum_2 x_62 (Tree_1 x_5 x_4 x_3))
			(sum_2 x_63 x_183)
			(sum_2 x_64 x_10)
			(sum_2 x_65 (Tree_1 x_8 x_7 x_6))
			(sum_2 x_66 x_184)
			(sum_2 x_67 x_5)
			(sum_2 x_68 x_8)
			(sum_2 x_69 x_3)
			(sum_2 x_70 x_6)
			(retTree_1 x_180 x_11)
			(retTree_1 x_181 x_11)
			(retTree_1 x_182 x_11)
			(retTree_1 x_183 x_11)
			(retTree_1 x_184 x_11))
		(appendsomeabs_1 (mutTree_1 (Tree_1 x_5 x_4 x_3) x_185) x_10 c_6 c_7 c_8))))
(assert (forall ((x_12 Tree_0) (x_13 MutTree_0) (c_16 Nat_0) (c_17 Nat_0) (c_18 Nat_0) (x_71 Nat_0) (x_72 Nat_0) (x_73 Nat_0) (x_189 Tree_0) (x_186 Tree_0) (x_187 Tree_0) (x_188 Tree_0))
	(=>	(and (retTree_1 x_189 x_13)
			(= x_71 c_16)
			(sum_0 x_12 c_16)
			(= x_72 c_17)
			(sum_0 Tree_5 c_17)
			(= x_73 c_18)
			(sum_0 x_186 c_18)
			(= x_187 x_12)
			(sum_2 x_71 x_12)
			(sum_2 x_72 Tree_5)
			(sum_2 x_73 x_188)
			(retTree_1 x_186 x_13)
			(retTree_1 x_187 x_13)
			(retTree_1 x_188 x_13))
		(appendsomeabs_1 (mutTree_1 Tree_5 x_189) x_12 c_16 c_17 c_18))))
(assert (forall ((x_14 Tree_0) (x_15 MutTree_0) (x_16 MutInt_0) (x_17 MutTree_0) (x_18 Tree_0) (x_19 MutTree_0) (c_19 Nat_0) (c_20 Nat_0) (c_21 Nat_0) (c_22 Nat_0) (c_23 Nat_0) (c_24 Nat_0) (c_25 Nat_0) (c_26 Nat_0) (c_27 Nat_0) (c_28 Nat_0) (x_74 Nat_0) (x_75 Nat_0) (x_76 Nat_0) (x_77 Nat_0) (x_78 Nat_0) (x_79 Nat_0) (x_80 Nat_0) (x_81 Nat_0) (x_82 Nat_0) (x_83 Nat_0) (x_190 Tree_0) (x_191 Tree_0) (x_192 Tree_0) (x_193 Tree_0) (x_194 Tree_0) (x_195 Tree_0) (x_196 Tree_0) (x_197 Tree_0) (x_198 Tree_0) (x_199 Nat_0) (x_200 Nat_0) (x_201 Tree_0) (x_202 Tree_0) (x_203 Tree_0) (x_204 Tree_0) (x_205 Tree_0) (x_206 Tree_0) (x_207 Tree_0) (x_208 Tree_0) (x_209 Tree_0) (x_210 Tree_0) (x_211 Tree_0))
	(=>	(and (= x_74 c_19)
			(sum_0 x_18 c_19)
			(= x_75 c_20)
			(sum_0 x_190 c_20)
			(= x_76 c_21)
			(sum_0 x_191 c_21)
			(= x_77 c_22)
			(sum_0 x_192 c_22)
			(= x_78 c_23)
			(sum_0 x_193 c_23)
			(= x_79 c_24)
			(sum_0 x_194 c_24)
			(= x_80 c_25)
			(sum_0 x_195 c_25)
			(= x_81 c_26)
			(sum_0 x_18 c_26)
			(= x_82 c_27)
			(sum_0 x_196 c_27)
			(= x_83 c_28)
			(sum_0 x_14 c_28)
			(appendsomeabs_0 (mutTree_1 x_197 x_14) x_18 c_26 c_27 c_28)
			(= x_198 x_14)
			(= x_199 x_200)
			(= x_201 x_202)
			(= x_203 x_204)
			(sum_2 x_74 x_18)
			(sum_2 x_75 x_205)
			(sum_2 x_76 x_206)
			(sum_2 x_77 x_207)
			(sum_2 x_78 x_208)
			(sum_2 x_79 x_209)
			(sum_2 x_80 x_210)
			(sum_2 x_81 x_18)
			(sum_2 x_82 x_211)
			(sum_2 x_83 x_14)
			(curTree_1 x_190 x_19)
			(retTree_1 x_191 x_19)
			(curTree_1 x_192 x_17)
			(retTree_1 x_193 x_17)
			(curTree_1 x_194 x_15)
			(retTree_1 x_195 x_15)
			(curTree_1 x_196 x_15)
			(curTree_1 x_197 x_15)
			(retTree_1 x_198 x_15)
			(retInt_1 x_199 x_16)
			(curInt_1 x_200 x_16)
			(retTree_1 x_201 x_17)
			(curTree_1 x_202 x_17)
			(retTree_1 x_203 x_19)
			(curTree_1 x_204 x_19)
			(curTree_1 x_205 x_19)
			(retTree_1 x_206 x_19)
			(curTree_1 x_207 x_17)
			(retTree_1 x_208 x_17)
			(curTree_1 x_209 x_15)
			(retTree_1 x_210 x_15)
			(curTree_1 x_211 x_15))
		(appendsomeabs_2 x_19 x_18 x_17 x_16 x_15 false c_19 c_20 c_21 c_22 c_23 c_24 c_25))))
(assert (forall ((x_20 Tree_0) (x_21 MutTree_0) (x_22 MutInt_0) (x_23 MutTree_0) (x_24 Tree_0) (x_25 MutTree_0) (c_29 Nat_0) (c_30 Nat_0) (c_31 Nat_0) (c_32 Nat_0) (c_33 Nat_0) (c_34 Nat_0) (c_35 Nat_0) (c_36 Nat_0) (c_37 Nat_0) (c_38 Nat_0) (x_84 Nat_0) (x_85 Nat_0) (x_86 Nat_0) (x_87 Nat_0) (x_88 Nat_0) (x_89 Nat_0) (x_90 Nat_0) (x_91 Nat_0) (x_92 Nat_0) (x_93 Nat_0) (x_212 Tree_0) (x_213 Tree_0) (x_214 Tree_0) (x_215 Tree_0) (x_216 Tree_0) (x_217 Tree_0) (x_218 Tree_0) (x_219 Tree_0) (x_220 Tree_0) (x_221 Tree_0) (x_222 Nat_0) (x_223 Nat_0) (x_224 Tree_0) (x_225 Tree_0) (x_226 Tree_0) (x_227 Tree_0) (x_228 Tree_0) (x_229 Tree_0) (x_230 Tree_0) (x_231 Tree_0) (x_232 Tree_0) (x_233 Tree_0))
	(=>	(and (= x_84 c_29)
			(sum_0 x_24 c_29)
			(= x_85 c_30)
			(sum_0 x_212 c_30)
			(= x_86 c_31)
			(sum_0 x_213 c_31)
			(= x_87 c_32)
			(sum_0 x_214 c_32)
			(= x_88 c_33)
			(sum_0 x_215 c_33)
			(= x_89 c_34)
			(sum_0 x_216 c_34)
			(= x_90 c_35)
			(sum_0 x_217 c_35)
			(= x_91 c_36)
			(sum_0 x_24 c_36)
			(= x_92 c_37)
			(sum_0 x_218 c_37)
			(= x_93 c_38)
			(sum_0 x_20 c_38)
			(appendsomeabs_0 (mutTree_1 x_219 x_20) x_24 c_36 c_37 c_38)
			(= x_220 x_221)
			(= x_222 x_223)
			(= x_224 x_20)
			(= x_225 x_226)
			(sum_2 x_84 x_24)
			(sum_2 x_85 x_227)
			(sum_2 x_86 x_228)
			(sum_2 x_87 x_229)
			(sum_2 x_88 x_230)
			(sum_2 x_89 x_231)
			(sum_2 x_90 x_232)
			(sum_2 x_91 x_24)
			(sum_2 x_92 x_233)
			(sum_2 x_93 x_20)
			(curTree_1 x_212 x_25)
			(retTree_1 x_213 x_25)
			(curTree_1 x_214 x_23)
			(retTree_1 x_215 x_23)
			(curTree_1 x_216 x_21)
			(retTree_1 x_217 x_21)
			(curTree_1 x_218 x_23)
			(curTree_1 x_219 x_23)
			(retTree_1 x_220 x_21)
			(curTree_1 x_221 x_21)
			(retInt_1 x_222 x_22)
			(curInt_1 x_223 x_22)
			(retTree_1 x_224 x_23)
			(retTree_1 x_225 x_25)
			(curTree_1 x_226 x_25)
			(curTree_1 x_227 x_25)
			(retTree_1 x_228 x_25)
			(curTree_1 x_229 x_23)
			(retTree_1 x_230 x_23)
			(curTree_1 x_231 x_21)
			(retTree_1 x_232 x_21)
			(curTree_1 x_233 x_23))
		(appendsomeabs_2 x_25 x_24 x_23 x_22 x_21 true c_29 c_30 c_31 c_32 c_33 c_34 c_35))))
(assert (forall ((x_26 Bool) (x_27 Nat_0) (x_28 Nat_0) (x_29 Nat_0) (x_30 Tree_0) (x_31 Tree_0) (x_32 Tree_0) (x_33 Tree_0) (x_34 Tree_0) (c_39 Nat_0) (c_40 Nat_0) (c_41 Nat_0) (c_42 Nat_0) (c_43 Nat_0) (x_94 Nat_0) (x_95 Nat_0) (x_96 Nat_0) (x_97 Nat_0) (x_98 Nat_0) (x_99 Nat_0) (x_100 Nat_0) (x_101 Nat_0) (x_114 Bool) (x_119 Nat_0))
	(=>	(and (= x_94 c_39)
			(sum_0 x_31 c_39)
			(= x_95 c_40)
			(sum_0 x_30 c_40)
			(= x_96 c_41)
			(sum_0 x_33 c_41)
			(= x_97 c_42)
			(sum_0 x_32 c_42)
			(= x_98 c_43)
			(sum_0 x_34 c_43)
			(sum_0 x_30 x_27)
			(sum_0 x_31 x_28)
			(appendsomeabs_0 (mutTree_1 x_30 x_33) x_31 c_39 c_40 c_41)
			(sum_0 x_32 x_29)
			(mainabs_0 x_32 x_34 x_114 x_26 c_42 c_43)
			(= x_29 x_119)
			(= x_99 x_27)
			(= x_100 x_28)
			(= x_101 x_29)
			(= x_32 x_33)
			(sum_2 x_94 x_31)
			(sum_2 x_95 x_30)
			(sum_2 x_96 x_33)
			(sum_2 x_97 x_32)
			(sum_2 x_98 x_34)
			(sum_2 x_99 x_30)
			(sum_2 x_100 x_31)
			(sum_2 x_101 x_32)
			(not_0 x_114 true)
			(add_0 x_119 x_27 x_28))
		(main_0 x_26))))
(assert (forall ((x_26 Bool) (x_27 Nat_0) (x_28 Nat_0) (x_29 Nat_0) (x_30 Tree_0) (x_31 Tree_0) (x_32 Tree_0) (x_33 Tree_0) (x_34 Tree_0) (c_39 Nat_0) (c_40 Nat_0) (c_41 Nat_0) (c_42 Nat_0) (c_43 Nat_0) (x_102 Nat_0) (x_103 Nat_0) (x_104 Nat_0) (x_105 Nat_0) (x_106 Nat_0) (x_107 Nat_0) (x_108 Nat_0) (x_109 Nat_0) (x_115 Bool) (x_120 Nat_0))
	(=>	(and (= x_102 c_39)
			(sum_0 x_31 c_39)
			(= x_103 c_40)
			(sum_0 x_30 c_40)
			(= x_104 c_41)
			(sum_0 x_33 c_41)
			(= x_105 c_42)
			(sum_0 x_32 c_42)
			(= x_106 c_43)
			(sum_0 x_34 c_43)
			(sum_0 x_30 x_27)
			(sum_0 x_31 x_28)
			(appendsomeabs_0 (mutTree_1 x_30 x_33) x_31 c_39 c_40 c_41)
			(sum_0 x_32 x_29)
			(mainabs_0 x_32 x_34 x_115 x_26 c_42 c_43)
			(diseqNat_0 x_29 x_120)
			(= x_107 x_27)
			(= x_108 x_28)
			(= x_109 x_29)
			(= x_32 x_33)
			(sum_2 x_102 x_31)
			(sum_2 x_103 x_30)
			(sum_2 x_104 x_33)
			(sum_2 x_105 x_32)
			(sum_2 x_106 x_34)
			(sum_2 x_107 x_30)
			(sum_2 x_108 x_31)
			(sum_2 x_109 x_32)
			(not_0 x_115 false)
			(add_0 x_120 x_27 x_28))
		(main_0 x_26))))
(assert (forall ((x_35 Bool) (x_36 Tree_0) (x_37 Tree_0) (c_44 Nat_0) (c_45 Nat_0) (x_110 Nat_0) (x_111 Nat_0))
	(=>	(and (= x_110 c_44)
			(sum_0 x_37 c_44)
			(= x_111 c_45)
			(sum_0 x_36 c_45)
			(= x_35 false)
			(sum_2 x_110 x_37)
			(sum_2 x_111 x_36))
		(mainabs_0 x_37 x_36 false x_35 c_44 c_45))))
(assert (forall ((x_38 Bool) (x_39 Tree_0) (x_40 Tree_0) (c_46 Nat_0) (c_47 Nat_0) (x_112 Nat_0) (x_113 Nat_0))
	(=>	(and (= x_112 c_46)
			(sum_0 x_40 c_46)
			(= x_113 c_47)
			(sum_0 x_39 c_47)
			(= x_38 true)
			(sum_2 x_112 x_40)
			(sum_2 x_113 x_39))
		(mainabs_0 x_40 x_39 true x_38 c_46 c_47))))
(assert (forall ((x_41 Tree_0) (x_42 Nat_0))
	(=> (sum_1 x_41 x_42)
	    (sum_0 x_41 x_42))))
(assert (forall ((x_43 Nat_0) (x_44 Nat_0) (x_45 Nat_0) (x_46 Tree_0) (x_47 Nat_0) (x_48 Tree_0) (x_121 Nat_0) (x_122 Nat_0))
	(=>	(and (sum_0 x_46 x_44)
			(sum_0 x_48 x_45)
			(= x_43 x_122)
			(add_0 x_121 x_44 x_47)
			(add_0 x_122 x_121 x_45))
		(sum_1 (Tree_1 x_46 x_47 x_48) x_43))))
(assert (forall ((x_49 Nat_0))
	(=> (= x_49 Z_0)
	    (sum_1 Tree_5 x_49))))
(assert (forall ((x_50 Nat_0))
	(=> (main_0 true)
	    false)))
(check-sat)
