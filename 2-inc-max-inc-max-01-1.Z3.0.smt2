(set-logic HORN)
(declare-datatypes ((Nat_0 0)) (((Z_0 ) (S_0 (unS_0 Nat_0)))))
(declare-fun diseqNat_0 (Nat_0 Nat_0) Bool)
(declare-fun unS_1 (Nat_0 Nat_0) Bool)
(declare-fun isZ_0 (Nat_0) Bool)
(declare-fun isS_0 (Nat_0) Bool)
(assert (forall ((x_67 Nat_0) (x_66 Nat_0))
	(=> (= x_67 (S_0 x_66))
	    (unS_1 x_66 x_67))))
(assert (isZ_0 Z_0))
(assert (forall ((x_68 Nat_0))
	(isS_0 (S_0 x_68))))
(assert (forall ((x_69 Nat_0))
	(diseqNat_0 Z_0 (S_0 x_69))))
(assert (forall ((x_70 Nat_0))
	(diseqNat_0 (S_0 x_70) Z_0)))
(assert (forall ((x_71 Nat_0) (x_72 Nat_0))
	(=> (diseqNat_0 x_71 x_72)
	    (diseqNat_0 (S_0 x_71) (S_0 x_72)))))
(declare-fun add_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun minus_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun le_0 (Nat_0 Nat_0) Bool)
(declare-fun ge_0 (Nat_0 Nat_0) Bool)
(declare-fun lt_0 (Nat_0 Nat_0) Bool)
(declare-fun gt_0 (Nat_0 Nat_0) Bool)
(declare-fun mult_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun div_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun mod_0 (Nat_0 Nat_0 Nat_0) Bool)
(assert (forall ((y_0 Nat_0))
	(add_0 y_0 Z_0 y_0)))
(assert (forall ((x_58 Nat_0) (y_0 Nat_0) (r_0 Nat_0))
	(=> (add_0 r_0 x_58 y_0)
	    (add_0 (S_0 r_0) (S_0 x_58) y_0))))
(assert (forall ((y_0 Nat_0))
	(minus_0 Z_0 Z_0 y_0)))
(assert (forall ((x_58 Nat_0) (y_0 Nat_0) (r_0 Nat_0))
	(=> (minus_0 r_0 x_58 y_0)
	    (minus_0 (S_0 r_0) (S_0 x_58) y_0))))
(assert (forall ((y_0 Nat_0))
	(le_0 Z_0 y_0)))
(assert (forall ((x_58 Nat_0) (y_0 Nat_0))
	(=> (le_0 x_58 y_0)
	    (le_0 (S_0 x_58) (S_0 y_0)))))
(assert (forall ((y_0 Nat_0))
	(ge_0 y_0 Z_0)))
(assert (forall ((x_58 Nat_0) (y_0 Nat_0))
	(=> (ge_0 x_58 y_0)
	    (ge_0 (S_0 x_58) (S_0 y_0)))))
(assert (forall ((y_0 Nat_0))
	(lt_0 Z_0 (S_0 y_0))))
(assert (forall ((x_58 Nat_0) (y_0 Nat_0))
	(=> (lt_0 x_58 y_0)
	    (lt_0 (S_0 x_58) (S_0 y_0)))))
(assert (forall ((y_0 Nat_0))
	(gt_0 (S_0 y_0) Z_0)))
(assert (forall ((x_58 Nat_0) (y_0 Nat_0))
	(=> (gt_0 x_58 y_0)
	    (gt_0 (S_0 x_58) (S_0 y_0)))))
(assert (forall ((y_0 Nat_0))
	(mult_0 Z_0 Z_0 y_0)))
(assert (forall ((x_58 Nat_0) (y_0 Nat_0) (r_0 Nat_0) (z_1 Nat_0))
	(=>	(and (mult_0 r_0 x_58 y_0)
			(add_0 z_1 r_0 y_0))
		(mult_0 z_1 (S_0 x_58) y_0))))
(assert (forall ((x_58 Nat_0) (y_0 Nat_0))
	(=> (lt_0 x_58 y_0)
	    (div_0 Z_0 x_58 y_0))))
(assert (forall ((x_58 Nat_0) (y_0 Nat_0) (r_0 Nat_0) (z_1 Nat_0))
	(=>	(and (ge_0 x_58 y_0)
			(minus_0 z_1 x_58 y_0)
			(div_0 r_0 z_1 y_0))
		(div_0 (S_0 r_0) x_58 y_0))))
(assert (forall ((x_58 Nat_0) (y_0 Nat_0))
	(=> (lt_0 x_58 y_0)
	    (mod_0 x_58 x_58 y_0))))
(assert (forall ((x_58 Nat_0) (y_0 Nat_0) (r_0 Nat_0) (z_1 Nat_0))
	(=>	(and (ge_0 x_58 y_0)
			(minus_0 z_1 x_58 y_0)
			(mod_0 r_0 z_1 y_0))
		(mod_0 r_0 x_58 y_0))))
(declare-fun and_0 (Bool Bool Bool) Bool)
(declare-fun or_0 (Bool Bool Bool) Bool)
(declare-fun hence_0 (Bool Bool Bool) Bool)
(declare-fun not_0 (Bool Bool) Bool)
(assert (and_0 false false false))
(assert (and_0 false true false))
(assert (and_0 false false true))
(assert (and_0 true true true))
(assert (or_0 false false false))
(assert (or_0 true true false))
(assert (or_0 true false true))
(assert (or_0 true true true))
(assert (hence_0 true false false))
(assert (hence_0 false true false))
(assert (hence_0 true false true))
(assert (hence_0 true true true))
(assert (not_0 true false))
(assert (not_0 false true))
(declare-datatypes ((MutInt_0 0)) (((mutInt_1 (curInt_0 Nat_0) (retInt_0 Nat_0)))))
(declare-fun diseqMutInt_0 (MutInt_0 MutInt_0) Bool)
(declare-fun curInt_1 (Nat_0 MutInt_0) Bool)
(declare-fun retInt_1 (Nat_0 MutInt_0) Bool)
(declare-fun ismutInt_0 (MutInt_0) Bool)
(assert (forall ((x_75 MutInt_0) (x_73 Nat_0) (x_74 Nat_0))
	(=> (= x_75 (mutInt_1 x_73 x_74))
	    (curInt_1 x_73 x_75))))
(assert (forall ((x_75 MutInt_0) (x_73 Nat_0) (x_74 Nat_0))
	(=> (= x_75 (mutInt_1 x_73 x_74))
	    (retInt_1 x_74 x_75))))
(assert (forall ((x_76 Nat_0) (x_77 Nat_0))
	(ismutInt_0 (mutInt_1 x_76 x_77))))
(assert (forall ((x_78 Nat_0) (x_79 Nat_0) (x_80 Nat_0) (x_81 Nat_0))
	(=> (diseqNat_0 x_78 x_80)
	    (diseqMutInt_0 (mutInt_1 x_78 x_79) (mutInt_1 x_80 x_81)))))
(assert (forall ((x_78 Nat_0) (x_79 Nat_0) (x_80 Nat_0) (x_81 Nat_0))
	(=> (diseqNat_0 x_79 x_81)
	    (diseqMutInt_0 (mutInt_1 x_78 x_79) (mutInt_1 x_80 x_81)))))
(declare-datatypes ((TupMutIntMutInt_0 0)) (((tupMutIntMutInt_1 (atMutIntMutInt_0 MutInt_0) (atMutIntMutInt_1 MutInt_0)))))
(declare-fun diseqTupMutIntMutInt_0 (TupMutIntMutInt_0 TupMutIntMutInt_0) Bool)
(declare-fun atMutIntMutInt_2 (MutInt_0 TupMutIntMutInt_0) Bool)
(declare-fun atMutIntMutInt_3 (MutInt_0 TupMutIntMutInt_0) Bool)
(declare-fun istupMutIntMutInt_0 (TupMutIntMutInt_0) Bool)
(assert (forall ((x_84 TupMutIntMutInt_0) (x_82 MutInt_0) (x_83 MutInt_0))
	(=> (= x_84 (tupMutIntMutInt_1 x_82 x_83))
	    (atMutIntMutInt_2 x_82 x_84))))
(assert (forall ((x_84 TupMutIntMutInt_0) (x_82 MutInt_0) (x_83 MutInt_0))
	(=> (= x_84 (tupMutIntMutInt_1 x_82 x_83))
	    (atMutIntMutInt_3 x_83 x_84))))
(assert (forall ((x_85 MutInt_0) (x_86 MutInt_0))
	(istupMutIntMutInt_0 (tupMutIntMutInt_1 x_85 x_86))))
(assert (forall ((x_87 MutInt_0) (x_88 MutInt_0) (x_89 MutInt_0) (x_90 MutInt_0))
	(=> (diseqMutInt_0 x_87 x_89)
	    (diseqTupMutIntMutInt_0 (tupMutIntMutInt_1 x_87 x_88) (tupMutIntMutInt_1 x_89 x_90)))))
(assert (forall ((x_87 MutInt_0) (x_88 MutInt_0) (x_89 MutInt_0) (x_90 MutInt_0))
	(=> (diseqMutInt_0 x_88 x_90)
	    (diseqTupMutIntMutInt_0 (tupMutIntMutInt_1 x_87 x_88) (tupMutIntMutInt_1 x_89 x_90)))))
(declare-fun main_0 (Bool) Bool)
(declare-fun main_1 (Bool Bool) Bool)
(declare-fun maxmid_0 (MutInt_0 MutInt_0 MutInt_0 TupMutIntMutInt_0) Bool)
(declare-fun maxmid_1 (MutInt_0 MutInt_0 MutInt_0 Bool TupMutIntMutInt_0) Bool)
(declare-fun maxmid_2 (MutInt_0 MutInt_0 MutInt_0 Bool TupMutIntMutInt_0) Bool)
(declare-fun maxmid_3 (MutInt_0 MutInt_0 MutInt_0 Bool TupMutIntMutInt_0) Bool)
(assert (forall ((x_0 Bool) (x_1 TupMutIntMutInt_0) (x_2 Nat_0) (x_3 Nat_0) (x_4 Nat_0) (x_5 Nat_0) (x_6 Nat_0) (x_7 Nat_0) (x_8 Nat_0) (x_9 Nat_0) (x_10 Nat_0) (x_59 Nat_0) (x_60 Nat_0) (x_61 Nat_0) (x_91 MutInt_0) (x_92 Nat_0) (x_93 MutInt_0) (x_94 Nat_0) (x_95 MutInt_0) (x_96 Nat_0) (x_97 MutInt_0) (x_98 Nat_0))
	(=>	(and (maxmid_0 (mutInt_1 x_2 x_6) (mutInt_1 x_3 x_8) (mutInt_1 x_4 x_10) x_1)
			(= x_9 x_10)
			(= x_7 x_8)
			(= x_5 x_6)
			(= x_92 x_59)
			(= x_94 x_60)
			(main_1 true x_0)
			(= x_5 x_61)
			(add_0 x_59 x_96 (S_0 (S_0 Z_0)))
			(add_0 x_60 x_98 (S_0 Z_0))
			(add_0 x_61 x_7 (S_0 (S_0 Z_0)))
			(atMutIntMutInt_2 x_91 x_1)
			(retInt_1 x_92 x_91)
			(atMutIntMutInt_3 x_93 x_1)
			(retInt_1 x_94 x_93)
			(atMutIntMutInt_2 x_95 x_1)
			(curInt_1 x_96 x_95)
			(atMutIntMutInt_3 x_97 x_1)
			(curInt_1 x_98 x_97))
		(main_0 x_0))))
(assert (forall ((x_0 Bool) (x_1 TupMutIntMutInt_0) (x_2 Nat_0) (x_3 Nat_0) (x_4 Nat_0) (x_5 Nat_0) (x_6 Nat_0) (x_7 Nat_0) (x_8 Nat_0) (x_9 Nat_0) (x_10 Nat_0) (x_62 Nat_0) (x_63 Nat_0) (x_64 Nat_0) (x_99 MutInt_0) (x_100 Nat_0) (x_101 MutInt_0) (x_102 Nat_0) (x_103 MutInt_0) (x_104 Nat_0) (x_105 MutInt_0) (x_106 Nat_0))
	(=>	(and (maxmid_0 (mutInt_1 x_2 x_6) (mutInt_1 x_3 x_8) (mutInt_1 x_4 x_10) x_1)
			(= x_9 x_10)
			(= x_7 x_8)
			(= x_5 x_6)
			(= x_100 x_62)
			(= x_102 x_63)
			(main_1 false x_0)
			(diseqNat_0 x_5 x_64)
			(add_0 x_62 x_104 (S_0 (S_0 Z_0)))
			(add_0 x_63 x_106 (S_0 Z_0))
			(add_0 x_64 x_7 (S_0 (S_0 Z_0)))
			(atMutIntMutInt_2 x_99 x_1)
			(retInt_1 x_100 x_99)
			(atMutIntMutInt_3 x_101 x_1)
			(retInt_1 x_102 x_101)
			(atMutIntMutInt_2 x_103 x_1)
			(curInt_1 x_104 x_103)
			(atMutIntMutInt_3 x_105 x_1)
			(curInt_1 x_106 x_105))
		(main_0 x_0))))
(assert (forall ((x_11 Bool))
	(=> (= x_11 false)
	    (main_1 false x_11))))
(assert (forall ((x_12 Bool))
	(=> (= x_12 true)
	    (main_1 true x_12))))
(assert (forall ((x_13 MutInt_0) (x_14 MutInt_0) (x_15 MutInt_0) (x_16 TupMutIntMutInt_0) (x_107 Nat_0) (x_108 Nat_0))
	(=>	(and (maxmid_1 x_13 x_14 x_15 true x_16)
			(gt_0 x_107 x_108)
			(curInt_1 x_107 x_13)
			(curInt_1 x_108 x_14))
		(maxmid_0 x_13 x_14 x_15 x_16))))
(assert (forall ((x_13 MutInt_0) (x_14 MutInt_0) (x_15 MutInt_0) (x_16 TupMutIntMutInt_0) (x_109 Nat_0) (x_110 Nat_0))
	(=>	(and (maxmid_1 x_13 x_14 x_15 false x_16)
			(le_0 x_109 x_110)
			(curInt_1 x_109 x_13)
			(curInt_1 x_110 x_14))
		(maxmid_0 x_13 x_14 x_15 x_16))))
(assert (forall ((x_17 MutInt_0) (x_18 MutInt_0) (x_19 MutInt_0) (x_20 TupMutIntMutInt_0) (x_111 Nat_0) (x_112 Nat_0))
	(=>	(and (maxmid_2 x_17 x_18 x_19 true x_20)
			(gt_0 x_111 x_112)
			(curInt_1 x_111 x_18)
			(curInt_1 x_112 x_19))
		(maxmid_1 x_17 x_18 x_19 false x_20))))
(assert (forall ((x_17 MutInt_0) (x_18 MutInt_0) (x_19 MutInt_0) (x_20 TupMutIntMutInt_0) (x_113 Nat_0) (x_114 Nat_0))
	(=>	(and (maxmid_2 x_17 x_18 x_19 false x_20)
			(le_0 x_113 x_114)
			(curInt_1 x_113 x_18)
			(curInt_1 x_114 x_19))
		(maxmid_1 x_17 x_18 x_19 false x_20))))
(assert (forall ((x_21 MutInt_0) (x_22 MutInt_0) (x_23 MutInt_0) (x_24 TupMutIntMutInt_0) (x_25 MutInt_0) (x_26 MutInt_0) (x_27 MutInt_0) (x_28 MutInt_0) (x_115 Nat_0) (x_116 Nat_0))
	(=>	(and (= x_28 x_21)
			(= x_26 x_22)
			(= x_27 x_28)
			(= x_25 x_26)
			(maxmid_2 x_25 x_27 x_23 true x_24)
			(gt_0 x_115 x_116)
			(curInt_1 x_115 x_27)
			(curInt_1 x_116 x_23))
		(maxmid_1 x_21 x_22 x_23 true x_24))))
(assert (forall ((x_21 MutInt_0) (x_22 MutInt_0) (x_23 MutInt_0) (x_24 TupMutIntMutInt_0) (x_25 MutInt_0) (x_26 MutInt_0) (x_27 MutInt_0) (x_28 MutInt_0) (x_117 Nat_0) (x_118 Nat_0))
	(=>	(and (= x_28 x_21)
			(= x_26 x_22)
			(= x_27 x_28)
			(= x_25 x_26)
			(maxmid_2 x_25 x_27 x_23 false x_24)
			(le_0 x_117 x_118)
			(curInt_1 x_117 x_27)
			(curInt_1 x_118 x_23))
		(maxmid_1 x_21 x_22 x_23 true x_24))))
(assert (forall ((x_29 MutInt_0) (x_30 MutInt_0) (x_31 MutInt_0) (x_32 TupMutIntMutInt_0) (x_119 Nat_0) (x_120 Nat_0))
	(=>	(and (maxmid_3 x_29 x_30 x_31 true x_32)
			(gt_0 x_119 x_120)
			(curInt_1 x_119 x_29)
			(curInt_1 x_120 x_30))
		(maxmid_2 x_29 x_30 x_31 false x_32))))
(assert (forall ((x_29 MutInt_0) (x_30 MutInt_0) (x_31 MutInt_0) (x_32 TupMutIntMutInt_0) (x_121 Nat_0) (x_122 Nat_0))
	(=>	(and (maxmid_3 x_29 x_30 x_31 false x_32)
			(le_0 x_121 x_122)
			(curInt_1 x_121 x_29)
			(curInt_1 x_122 x_30))
		(maxmid_2 x_29 x_30 x_31 false x_32))))
(assert (forall ((x_33 MutInt_0) (x_34 MutInt_0) (x_35 MutInt_0) (x_36 TupMutIntMutInt_0) (x_37 MutInt_0) (x_38 MutInt_0) (x_39 MutInt_0) (x_40 MutInt_0) (x_123 Nat_0) (x_124 Nat_0))
	(=>	(and (= x_40 x_34)
			(= x_38 x_35)
			(= x_39 x_40)
			(= x_37 x_38)
			(maxmid_3 x_33 x_37 x_39 true x_36)
			(gt_0 x_123 x_124)
			(curInt_1 x_123 x_33)
			(curInt_1 x_124 x_37))
		(maxmid_2 x_33 x_34 x_35 true x_36))))
(assert (forall ((x_33 MutInt_0) (x_34 MutInt_0) (x_35 MutInt_0) (x_36 TupMutIntMutInt_0) (x_37 MutInt_0) (x_38 MutInt_0) (x_39 MutInt_0) (x_40 MutInt_0) (x_125 Nat_0) (x_126 Nat_0))
	(=>	(and (= x_40 x_34)
			(= x_38 x_35)
			(= x_39 x_40)
			(= x_37 x_38)
			(maxmid_3 x_33 x_37 x_39 false x_36)
			(le_0 x_125 x_126)
			(curInt_1 x_125 x_33)
			(curInt_1 x_126 x_37))
		(maxmid_2 x_33 x_34 x_35 true x_36))))
(assert (forall ((x_41 MutInt_0) (x_42 MutInt_0) (x_43 MutInt_0) (x_44 TupMutIntMutInt_0) (x_45 Nat_0) (x_46 Nat_0) (x_127 Nat_0) (x_128 Nat_0) (x_129 Nat_0) (x_130 Nat_0) (x_131 Nat_0) (x_132 Nat_0))
	(=>	(and (= x_127 x_45)
			(= x_128 x_129)
			(= x_130 x_46)
			(= x_44 (tupMutIntMutInt_1 (mutInt_1 x_131 x_45) (mutInt_1 x_132 x_46)))
			(retInt_1 x_127 x_43)
			(retInt_1 x_128 x_41)
			(curInt_1 x_129 x_41)
			(retInt_1 x_130 x_42)
			(curInt_1 x_131 x_43)
			(curInt_1 x_132 x_42))
		(maxmid_3 x_41 x_42 x_43 false x_44))))
(assert (forall ((x_47 MutInt_0) (x_48 MutInt_0) (x_49 MutInt_0) (x_50 TupMutIntMutInt_0) (x_51 MutInt_0) (x_52 MutInt_0) (x_53 MutInt_0) (x_54 MutInt_0) (x_55 Nat_0) (x_56 Nat_0) (x_133 Nat_0) (x_134 Nat_0) (x_135 Nat_0) (x_136 Nat_0) (x_137 Nat_0) (x_138 Nat_0))
	(=>	(and (= x_54 x_47)
			(= x_52 x_48)
			(= x_53 x_54)
			(= x_51 x_52)
			(= x_133 x_55)
			(= x_134 x_135)
			(= x_136 x_56)
			(= x_50 (tupMutIntMutInt_1 (mutInt_1 x_137 x_55) (mutInt_1 x_138 x_56)))
			(retInt_1 x_133 x_49)
			(retInt_1 x_134 x_51)
			(curInt_1 x_135 x_51)
			(retInt_1 x_136 x_53)
			(curInt_1 x_137 x_49)
			(curInt_1 x_138 x_53))
		(maxmid_3 x_47 x_48 x_49 true x_50))))
(assert (forall ((x_57 Nat_0))
	(=> (main_0 true)
	    false)))
(check-sat)
