(set-logic HORN)
(declare-datatypes ((Nat_0 0)) (((Z_0 ) (S_0 (unS_0 Nat_0)))))
(declare-fun diseqNat_0 (Nat_0 Nat_0) Bool)
(declare-fun unS_1 (Nat_0 Nat_0) Bool)
(declare-fun isZ_0 (Nat_0) Bool)
(declare-fun isS_0 (Nat_0) Bool)
(assert (forall ((x_33 Nat_0) (x_32 Nat_0))
	(=> (= x_33 (S_0 x_32))
	    (unS_1 x_32 x_33))))
(assert (isZ_0 Z_0))
(assert (forall ((x_34 Nat_0))
	(isS_0 (S_0 x_34))))
(assert (forall ((x_35 Nat_0))
	(diseqNat_0 Z_0 (S_0 x_35))))
(assert (forall ((x_36 Nat_0))
	(diseqNat_0 (S_0 x_36) Z_0)))
(assert (forall ((x_37 Nat_0) (x_38 Nat_0))
	(=> (diseqNat_0 x_37 x_38)
	    (diseqNat_0 (S_0 x_37) (S_0 x_38)))))
(declare-fun add_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun minus_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun le_0 (Nat_0 Nat_0) Bool)
(declare-fun ge_0 (Nat_0 Nat_0) Bool)
(declare-fun lt_0 (Nat_0 Nat_0) Bool)
(declare-fun gt_0 (Nat_0 Nat_0) Bool)
(declare-fun mult_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun div_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun mod_0 (Nat_0 Nat_0 Nat_0) Bool)
(assert (forall ((y_0 Nat_0))
	(add_0 y_0 Z_0 y_0)))
(assert (forall ((x_28 Nat_0) (y_0 Nat_0) (r_0 Nat_0))
	(=> (add_0 r_0 x_28 y_0)
	    (add_0 (S_0 r_0) (S_0 x_28) y_0))))
(assert (forall ((y_0 Nat_0))
	(minus_0 Z_0 Z_0 y_0)))
(assert (forall ((x_28 Nat_0) (y_0 Nat_0) (r_0 Nat_0))
	(=> (minus_0 r_0 x_28 y_0)
	    (minus_0 (S_0 r_0) (S_0 x_28) y_0))))
(assert (forall ((y_0 Nat_0))
	(le_0 Z_0 y_0)))
(assert (forall ((x_28 Nat_0) (y_0 Nat_0))
	(=> (le_0 x_28 y_0)
	    (le_0 (S_0 x_28) (S_0 y_0)))))
(assert (forall ((y_0 Nat_0))
	(ge_0 y_0 Z_0)))
(assert (forall ((x_28 Nat_0) (y_0 Nat_0))
	(=> (ge_0 x_28 y_0)
	    (ge_0 (S_0 x_28) (S_0 y_0)))))
(assert (forall ((y_0 Nat_0))
	(lt_0 Z_0 (S_0 y_0))))
(assert (forall ((x_28 Nat_0) (y_0 Nat_0))
	(=> (lt_0 x_28 y_0)
	    (lt_0 (S_0 x_28) (S_0 y_0)))))
(assert (forall ((y_0 Nat_0))
	(gt_0 (S_0 y_0) Z_0)))
(assert (forall ((x_28 Nat_0) (y_0 Nat_0))
	(=> (gt_0 x_28 y_0)
	    (gt_0 (S_0 x_28) (S_0 y_0)))))
(assert (forall ((y_0 Nat_0))
	(mult_0 Z_0 Z_0 y_0)))
(assert (forall ((x_28 Nat_0) (y_0 Nat_0) (r_0 Nat_0) (z_1 Nat_0))
	(=>	(and (mult_0 r_0 x_28 y_0)
			(add_0 z_1 r_0 y_0))
		(mult_0 z_1 (S_0 x_28) y_0))))
(assert (forall ((x_28 Nat_0) (y_0 Nat_0))
	(=> (lt_0 x_28 y_0)
	    (div_0 Z_0 x_28 y_0))))
(assert (forall ((x_28 Nat_0) (y_0 Nat_0) (r_0 Nat_0) (z_1 Nat_0))
	(=>	(and (ge_0 x_28 y_0)
			(minus_0 z_1 x_28 y_0)
			(div_0 r_0 z_1 y_0))
		(div_0 (S_0 r_0) x_28 y_0))))
(assert (forall ((x_28 Nat_0) (y_0 Nat_0))
	(=> (lt_0 x_28 y_0)
	    (mod_0 x_28 x_28 y_0))))
(assert (forall ((x_28 Nat_0) (y_0 Nat_0) (r_0 Nat_0) (z_1 Nat_0))
	(=>	(and (ge_0 x_28 y_0)
			(minus_0 z_1 x_28 y_0)
			(mod_0 r_0 z_1 y_0))
		(mod_0 r_0 x_28 y_0))))
(declare-fun and_0 (Bool Bool Bool) Bool)
(declare-fun or_0 (Bool Bool Bool) Bool)
(declare-fun hence_0 (Bool Bool Bool) Bool)
(declare-fun not_0 (Bool Bool) Bool)
(assert (and_0 false false false))
(assert (and_0 false true false))
(assert (and_0 false false true))
(assert (and_0 true true true))
(assert (or_0 false false false))
(assert (or_0 true true false))
(assert (or_0 true false true))
(assert (or_0 true true true))
(assert (hence_0 true false false))
(assert (hence_0 false true false))
(assert (hence_0 true false true))
(assert (hence_0 true true true))
(assert (not_0 true false))
(assert (not_0 false true))
(declare-datatypes ((MutInt_0 0)) (((mutInt_1 (curInt_0 Nat_0) (retInt_0 Nat_0)))))
(declare-fun diseqMutInt_0 (MutInt_0 MutInt_0) Bool)
(declare-fun curInt_1 (Nat_0 MutInt_0) Bool)
(declare-fun retInt_1 (Nat_0 MutInt_0) Bool)
(declare-fun ismutInt_0 (MutInt_0) Bool)
(assert (forall ((x_41 MutInt_0) (x_39 Nat_0) (x_40 Nat_0))
	(=> (= x_41 (mutInt_1 x_39 x_40))
	    (curInt_1 x_39 x_41))))
(assert (forall ((x_41 MutInt_0) (x_39 Nat_0) (x_40 Nat_0))
	(=> (= x_41 (mutInt_1 x_39 x_40))
	    (retInt_1 x_40 x_41))))
(assert (forall ((x_42 Nat_0) (x_43 Nat_0))
	(ismutInt_0 (mutInt_1 x_42 x_43))))
(assert (forall ((x_44 Nat_0) (x_45 Nat_0) (x_46 Nat_0) (x_47 Nat_0))
	(=> (diseqNat_0 x_44 x_46)
	    (diseqMutInt_0 (mutInt_1 x_44 x_45) (mutInt_1 x_46 x_47)))))
(assert (forall ((x_44 Nat_0) (x_45 Nat_0) (x_46 Nat_0) (x_47 Nat_0))
	(=> (diseqNat_0 x_45 x_47)
	    (diseqMutInt_0 (mutInt_1 x_44 x_45) (mutInt_1 x_46 x_47)))))
(declare-fun main_0 (Bool) Bool)
(declare-fun main_1 (Bool Bool) Bool)
(declare-fun takemax_0 (MutInt_0 MutInt_0 MutInt_0) Bool)
(declare-fun takemax_1 (MutInt_0 MutInt_0 Bool MutInt_0) Bool)
(assert (forall ((x_0 Bool) (x_1 MutInt_0) (x_2 Nat_0) (x_3 Nat_0) (x_4 Nat_0) (x_5 Nat_0) (x_6 Nat_0) (x_7 Nat_0) (x_29 Nat_0) (x_48 Nat_0) (x_49 Nat_0))
	(=>	(and (takemax_0 (mutInt_1 x_2 x_5) (mutInt_1 x_3 x_7) x_1)
			(= x_6 x_7)
			(= x_4 x_5)
			(= x_48 x_29)
			(main_1 true x_0)
			(= x_4 x_6)
			(add_0 x_29 x_49 (S_0 Z_0))
			(retInt_1 x_48 x_1)
			(curInt_1 x_49 x_1))
		(main_0 x_0))))
(assert (forall ((x_0 Bool) (x_1 MutInt_0) (x_2 Nat_0) (x_3 Nat_0) (x_4 Nat_0) (x_5 Nat_0) (x_6 Nat_0) (x_7 Nat_0) (x_30 Nat_0) (x_50 Nat_0) (x_51 Nat_0))
	(=>	(and (takemax_0 (mutInt_1 x_2 x_5) (mutInt_1 x_3 x_7) x_1)
			(= x_6 x_7)
			(= x_4 x_5)
			(= x_50 x_30)
			(main_1 false x_0)
			(diseqNat_0 x_4 x_6)
			(add_0 x_30 x_51 (S_0 Z_0))
			(retInt_1 x_50 x_1)
			(curInt_1 x_51 x_1))
		(main_0 x_0))))
(assert (forall ((x_8 Bool))
	(=> (= x_8 false)
	    (main_1 false x_8))))
(assert (forall ((x_9 Bool))
	(=> (= x_9 true)
	    (main_1 true x_9))))
(assert (forall ((x_10 MutInt_0) (x_11 MutInt_0) (x_12 MutInt_0) (x_52 Nat_0) (x_53 Nat_0))
	(=>	(and (takemax_1 x_10 x_11 true x_12)
			(ge_0 x_52 x_53)
			(curInt_1 x_52 x_10)
			(curInt_1 x_53 x_11))
		(takemax_0 x_10 x_11 x_12))))
(assert (forall ((x_10 MutInt_0) (x_11 MutInt_0) (x_12 MutInt_0) (x_54 Nat_0) (x_55 Nat_0))
	(=>	(and (takemax_1 x_10 x_11 false x_12)
			(lt_0 x_54 x_55)
			(curInt_1 x_54 x_10)
			(curInt_1 x_55 x_11))
		(takemax_0 x_10 x_11 x_12))))
(assert (forall ((x_13 MutInt_0) (x_14 MutInt_0) (x_15 MutInt_0) (x_16 Nat_0) (x_17 Nat_0) (x_18 Nat_0) (x_19 Nat_0) (x_56 Nat_0) (x_57 Nat_0) (x_58 Nat_0) (x_59 Nat_0))
	(=>	(and (= x_16 x_17)
			(= x_17 x_18)
			(= x_18 x_19)
			(= x_56 x_57)
			(= x_58 x_16)
			(= x_15 (mutInt_1 x_59 x_19))
			(retInt_1 x_56 x_13)
			(curInt_1 x_57 x_13)
			(retInt_1 x_58 x_14)
			(curInt_1 x_59 x_14))
		(takemax_1 x_13 x_14 false x_15))))
(assert (forall ((x_20 MutInt_0) (x_21 MutInt_0) (x_22 MutInt_0) (x_23 Nat_0) (x_24 Nat_0) (x_25 Nat_0) (x_26 Nat_0) (x_60 Nat_0) (x_61 Nat_0) (x_62 Nat_0) (x_63 Nat_0))
	(=>	(and (= x_23 x_24)
			(= x_24 x_25)
			(= x_25 x_26)
			(= x_60 x_23)
			(= x_61 x_62)
			(= x_22 (mutInt_1 x_63 x_26))
			(retInt_1 x_60 x_20)
			(retInt_1 x_61 x_21)
			(curInt_1 x_62 x_21)
			(curInt_1 x_63 x_20))
		(takemax_1 x_20 x_21 true x_22))))
(assert (forall ((x_27 Nat_0))
	(=> (main_0 true)
	    false)))
(check-sat)
