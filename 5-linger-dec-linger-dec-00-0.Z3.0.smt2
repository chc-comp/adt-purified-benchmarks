(set-logic HORN)
(declare-datatypes ((Nat_0 0)) (((Z_0 ) (S_0 (unS_0 Nat_0)))))
(declare-fun diseqNat_0 (Nat_0 Nat_0) Bool)
(declare-fun unS_1 (Nat_0 Nat_0) Bool)
(declare-fun isZ_0 (Nat_0) Bool)
(declare-fun isS_0 (Nat_0) Bool)
(assert (forall ((x_30 Nat_0) (x_29 Nat_0))
	(=> (= x_30 (S_0 x_29))
	    (unS_1 x_29 x_30))))
(assert (isZ_0 Z_0))
(assert (forall ((x_31 Nat_0))
	(isS_0 (S_0 x_31))))
(assert (forall ((x_32 Nat_0))
	(diseqNat_0 Z_0 (S_0 x_32))))
(assert (forall ((x_33 Nat_0))
	(diseqNat_0 (S_0 x_33) Z_0)))
(assert (forall ((x_34 Nat_0) (x_35 Nat_0))
	(=> (diseqNat_0 x_34 x_35)
	    (diseqNat_0 (S_0 x_34) (S_0 x_35)))))
(declare-fun add_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun minus_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun le_0 (Nat_0 Nat_0) Bool)
(declare-fun ge_0 (Nat_0 Nat_0) Bool)
(declare-fun lt_0 (Nat_0 Nat_0) Bool)
(declare-fun gt_0 (Nat_0 Nat_0) Bool)
(declare-fun mult_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun div_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun mod_0 (Nat_0 Nat_0 Nat_0) Bool)
(assert (forall ((y_0 Nat_0))
	(add_0 y_0 Z_0 y_0)))
(assert (forall ((x_26 Nat_0) (y_0 Nat_0) (r_0 Nat_0))
	(=> (add_0 r_0 x_26 y_0)
	    (add_0 (S_0 r_0) (S_0 x_26) y_0))))
(assert (forall ((y_0 Nat_0))
	(minus_0 Z_0 Z_0 y_0)))
(assert (forall ((x_26 Nat_0) (y_0 Nat_0) (r_0 Nat_0))
	(=> (minus_0 r_0 x_26 y_0)
	    (minus_0 (S_0 r_0) (S_0 x_26) y_0))))
(assert (forall ((y_0 Nat_0))
	(le_0 Z_0 y_0)))
(assert (forall ((x_26 Nat_0) (y_0 Nat_0))
	(=> (le_0 x_26 y_0)
	    (le_0 (S_0 x_26) (S_0 y_0)))))
(assert (forall ((y_0 Nat_0))
	(ge_0 y_0 Z_0)))
(assert (forall ((x_26 Nat_0) (y_0 Nat_0))
	(=> (ge_0 x_26 y_0)
	    (ge_0 (S_0 x_26) (S_0 y_0)))))
(assert (forall ((y_0 Nat_0))
	(lt_0 Z_0 (S_0 y_0))))
(assert (forall ((x_26 Nat_0) (y_0 Nat_0))
	(=> (lt_0 x_26 y_0)
	    (lt_0 (S_0 x_26) (S_0 y_0)))))
(assert (forall ((y_0 Nat_0))
	(gt_0 (S_0 y_0) Z_0)))
(assert (forall ((x_26 Nat_0) (y_0 Nat_0))
	(=> (gt_0 x_26 y_0)
	    (gt_0 (S_0 x_26) (S_0 y_0)))))
(assert (forall ((y_0 Nat_0))
	(mult_0 Z_0 Z_0 y_0)))
(assert (forall ((x_26 Nat_0) (y_0 Nat_0) (r_0 Nat_0) (z_1 Nat_0))
	(=>	(and (mult_0 r_0 x_26 y_0)
			(add_0 z_1 r_0 y_0))
		(mult_0 z_1 (S_0 x_26) y_0))))
(assert (forall ((x_26 Nat_0) (y_0 Nat_0))
	(=> (lt_0 x_26 y_0)
	    (div_0 Z_0 x_26 y_0))))
(assert (forall ((x_26 Nat_0) (y_0 Nat_0) (r_0 Nat_0) (z_1 Nat_0))
	(=>	(and (ge_0 x_26 y_0)
			(minus_0 z_1 x_26 y_0)
			(div_0 r_0 z_1 y_0))
		(div_0 (S_0 r_0) x_26 y_0))))
(assert (forall ((x_26 Nat_0) (y_0 Nat_0))
	(=> (lt_0 x_26 y_0)
	    (mod_0 x_26 x_26 y_0))))
(assert (forall ((x_26 Nat_0) (y_0 Nat_0) (r_0 Nat_0) (z_1 Nat_0))
	(=>	(and (ge_0 x_26 y_0)
			(minus_0 z_1 x_26 y_0)
			(mod_0 r_0 z_1 y_0))
		(mod_0 r_0 x_26 y_0))))
(declare-fun and_0 (Bool Bool Bool) Bool)
(declare-fun or_0 (Bool Bool Bool) Bool)
(declare-fun hence_0 (Bool Bool Bool) Bool)
(declare-fun not_0 (Bool Bool) Bool)
(assert (and_0 false false false))
(assert (and_0 false true false))
(assert (and_0 false false true))
(assert (and_0 true true true))
(assert (or_0 false false false))
(assert (or_0 true true false))
(assert (or_0 true false true))
(assert (or_0 true true true))
(assert (hence_0 true false false))
(assert (hence_0 false true false))
(assert (hence_0 true false true))
(assert (hence_0 true true true))
(assert (not_0 true false))
(assert (not_0 false true))
(declare-datatypes ((MutInt_0 0)) (((mutInt_1 (curInt_0 Nat_0) (retInt_0 Nat_0)))))
(declare-fun diseqMutInt_0 (MutInt_0 MutInt_0) Bool)
(declare-fun curInt_1 (Nat_0 MutInt_0) Bool)
(declare-fun retInt_1 (Nat_0 MutInt_0) Bool)
(declare-fun ismutInt_0 (MutInt_0) Bool)
(assert (forall ((x_38 MutInt_0) (x_36 Nat_0) (x_37 Nat_0))
	(=> (= x_38 (mutInt_1 x_36 x_37))
	    (curInt_1 x_36 x_38))))
(assert (forall ((x_38 MutInt_0) (x_36 Nat_0) (x_37 Nat_0))
	(=> (= x_38 (mutInt_1 x_36 x_37))
	    (retInt_1 x_37 x_38))))
(assert (forall ((x_39 Nat_0) (x_40 Nat_0))
	(ismutInt_0 (mutInt_1 x_39 x_40))))
(assert (forall ((x_41 Nat_0) (x_42 Nat_0) (x_43 Nat_0) (x_44 Nat_0))
	(=> (diseqNat_0 x_41 x_43)
	    (diseqMutInt_0 (mutInt_1 x_41 x_42) (mutInt_1 x_43 x_44)))))
(assert (forall ((x_41 Nat_0) (x_42 Nat_0) (x_43 Nat_0) (x_44 Nat_0))
	(=> (diseqNat_0 x_42 x_44)
	    (diseqMutInt_0 (mutInt_1 x_41 x_42) (mutInt_1 x_43 x_44)))))
(declare-fun lingerdec_0 (MutInt_0) Bool)
(declare-fun lingerdec_1 (MutInt_0 Bool) Bool)
(declare-fun lingerdec_2 (MutInt_0 Nat_0 Bool) Bool)
(declare-fun main_0 (Bool) Bool)
(declare-fun main_1 (Bool Bool) Bool)
(assert (forall ((x_0 MutInt_0) (x_1 Bool) (x_27 Nat_0) (x_45 Nat_0) (x_46 Nat_0))
	(=>	(and (lingerdec_1 (mutInt_1 x_27 x_45) x_1)
			(minus_0 x_27 x_46 (S_0 Z_0))
			(retInt_1 x_45 x_0)
			(curInt_1 x_46 x_0))
		(lingerdec_0 x_0))))
(assert (forall ((x_2 MutInt_0) (x_3 Nat_0) (x_4 Bool))
	(=> (lingerdec_2 x_2 x_3 x_4)
	    (lingerdec_1 x_2 false))))
(assert (forall ((x_5 MutInt_0) (x_47 Nat_0) (x_48 Nat_0))
	(=>	(and (= x_47 x_48)
			(retInt_1 x_47 x_5)
			(curInt_1 x_48 x_5))
		(lingerdec_1 x_5 true))))
(assert (forall ((x_6 MutInt_0) (x_7 Nat_0) (x_8 Nat_0) (x_9 Nat_0) (x_10 Nat_0) (x_49 Nat_0) (x_50 Nat_0))
	(=>	(and (= x_8 x_9)
			(lingerdec_0 (mutInt_1 x_49 x_10))
			(= x_9 x_10)
			(= x_50 x_8)
			(curInt_1 x_49 x_6)
			(retInt_1 x_50 x_6))
		(lingerdec_2 x_6 x_7 false))))
(assert (forall ((x_11 MutInt_0) (x_12 Nat_0) (x_13 Nat_0) (x_14 Nat_0) (x_15 Nat_0) (x_16 Nat_0) (x_51 Nat_0) (x_52 Nat_0))
	(=>	(and (= x_13 x_14)
			(= x_14 x_15)
			(lingerdec_0 (mutInt_1 x_12 x_16))
			(= x_15 x_16)
			(= x_51 x_52)
			(retInt_1 x_51 x_11)
			(curInt_1 x_52 x_11))
		(lingerdec_2 x_11 x_12 true))))
(assert (forall ((x_17 Bool) (x_18 Nat_0) (x_19 Nat_0) (x_20 Nat_0) (x_24 Bool))
	(=>	(and (lingerdec_0 (mutInt_1 x_18 x_20))
			(= x_19 x_20)
			(main_1 x_24 x_17)
			(gt_0 x_18 x_19)
			(not_0 x_24 true))
		(main_0 x_17))))
(assert (forall ((x_17 Bool) (x_18 Nat_0) (x_19 Nat_0) (x_20 Nat_0) (x_25 Bool))
	(=>	(and (lingerdec_0 (mutInt_1 x_18 x_20))
			(= x_19 x_20)
			(main_1 x_25 x_17)
			(le_0 x_18 x_19)
			(not_0 x_25 false))
		(main_0 x_17))))
(assert (forall ((x_21 Bool))
	(=> (= x_21 false)
	    (main_1 false x_21))))
(assert (forall ((x_22 Bool))
	(=> (= x_22 true)
	    (main_1 true x_22))))
(assert (forall ((x_23 Nat_0))
	(=> (main_0 true)
	    false)))
(check-sat)
