(set-logic HORN)
(declare-datatypes ((Nat_0 0)) (((Z_0 ) (S_0 (unS_0 Nat_0)))))
(declare-fun diseqNat_0 (Nat_0 Nat_0) Bool)
(declare-fun unS_1 (Nat_0 Nat_0) Bool)
(declare-fun isZ_0 (Nat_0) Bool)
(declare-fun isS_0 (Nat_0) Bool)
(assert (forall ((x_5 Nat_0) (x_4 Nat_0))
	(=> (= x_5 (S_0 x_4))
	    (unS_1 x_4 x_5))))
(assert (isZ_0 Z_0))
(assert (forall ((x_6 Nat_0))
	(isS_0 (S_0 x_6))))
(assert (forall ((x_7 Nat_0))
	(diseqNat_0 Z_0 (S_0 x_7))))
(assert (forall ((x_8 Nat_0))
	(diseqNat_0 (S_0 x_8) Z_0)))
(assert (forall ((x_9 Nat_0) (x_10 Nat_0))
	(=> (diseqNat_0 x_9 x_10)
	    (diseqNat_0 (S_0 x_9) (S_0 x_10)))))
(declare-fun add_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun minus_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun le_0 (Nat_0 Nat_0) Bool)
(declare-fun ge_0 (Nat_0 Nat_0) Bool)
(declare-fun lt_0 (Nat_0 Nat_0) Bool)
(declare-fun gt_0 (Nat_0 Nat_0) Bool)
(declare-fun mult_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun div_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun mod_0 (Nat_0 Nat_0 Nat_0) Bool)
(assert (forall ((y_0 Nat_0))
	(add_0 y_0 Z_0 y_0)))
(assert (forall ((x_0 Nat_0) (y_0 Nat_0) (r_1 Nat_0))
	(=> (add_0 r_1 x_0 y_0)
	    (add_0 (S_0 r_1) (S_0 x_0) y_0))))
(assert (forall ((y_0 Nat_0))
	(minus_0 Z_0 Z_0 y_0)))
(assert (forall ((x_0 Nat_0) (y_0 Nat_0) (r_1 Nat_0))
	(=> (minus_0 r_1 x_0 y_0)
	    (minus_0 (S_0 r_1) (S_0 x_0) y_0))))
(assert (forall ((y_0 Nat_0))
	(le_0 Z_0 y_0)))
(assert (forall ((x_0 Nat_0) (y_0 Nat_0))
	(=> (le_0 x_0 y_0)
	    (le_0 (S_0 x_0) (S_0 y_0)))))
(assert (forall ((y_0 Nat_0))
	(ge_0 y_0 Z_0)))
(assert (forall ((x_0 Nat_0) (y_0 Nat_0))
	(=> (ge_0 x_0 y_0)
	    (ge_0 (S_0 x_0) (S_0 y_0)))))
(assert (forall ((y_0 Nat_0))
	(lt_0 Z_0 (S_0 y_0))))
(assert (forall ((x_0 Nat_0) (y_0 Nat_0))
	(=> (lt_0 x_0 y_0)
	    (lt_0 (S_0 x_0) (S_0 y_0)))))
(assert (forall ((y_0 Nat_0))
	(gt_0 (S_0 y_0) Z_0)))
(assert (forall ((x_0 Nat_0) (y_0 Nat_0))
	(=> (gt_0 x_0 y_0)
	    (gt_0 (S_0 x_0) (S_0 y_0)))))
(assert (forall ((y_0 Nat_0))
	(mult_0 Z_0 Z_0 y_0)))
(assert (forall ((x_0 Nat_0) (y_0 Nat_0) (r_1 Nat_0) (z_0 Nat_0))
	(=>	(and (mult_0 r_1 x_0 y_0)
			(add_0 z_0 r_1 y_0))
		(mult_0 z_0 (S_0 x_0) y_0))))
(assert (forall ((x_0 Nat_0) (y_0 Nat_0))
	(=> (lt_0 x_0 y_0)
	    (div_0 Z_0 x_0 y_0))))
(assert (forall ((x_0 Nat_0) (y_0 Nat_0) (r_1 Nat_0) (z_0 Nat_0))
	(=>	(and (ge_0 x_0 y_0)
			(minus_0 z_0 x_0 y_0)
			(div_0 r_1 z_0 y_0))
		(div_0 (S_0 r_1) x_0 y_0))))
(assert (forall ((x_0 Nat_0) (y_0 Nat_0))
	(=> (lt_0 x_0 y_0)
	    (mod_0 x_0 x_0 y_0))))
(assert (forall ((x_0 Nat_0) (y_0 Nat_0) (r_1 Nat_0) (z_0 Nat_0))
	(=>	(and (ge_0 x_0 y_0)
			(minus_0 z_0 x_0 y_0)
			(mod_0 r_1 z_0 y_0))
		(mod_0 r_1 x_0 y_0))))
(declare-datatypes ((Heap_0 0)) (((hleaf_0 ) (heap_0 (rk_0 Nat_0) (value_0 Nat_0) (hleft_0 Heap_0) (hright_0 Heap_0)))))
(declare-fun diseqHeap_0 (Heap_0 Heap_0) Bool)
(declare-fun rk_1 (Nat_0 Heap_0) Bool)
(declare-fun value_1 (Nat_0 Heap_0) Bool)
(declare-fun hleft_1 (Heap_0 Heap_0) Bool)
(declare-fun hright_1 (Heap_0 Heap_0) Bool)
(declare-fun ishleaf_0 (Heap_0) Bool)
(declare-fun isheap_0 (Heap_0) Bool)
(assert (forall ((x_16 Heap_0) (x_12 Nat_0) (x_13 Nat_0) (x_14 Heap_0) (x_15 Heap_0))
	(=> (= x_16 (heap_0 x_12 x_13 x_14 x_15))
	    (rk_1 x_12 x_16))))
(assert (forall ((x_16 Heap_0) (x_12 Nat_0) (x_13 Nat_0) (x_14 Heap_0) (x_15 Heap_0))
	(=> (= x_16 (heap_0 x_12 x_13 x_14 x_15))
	    (value_1 x_13 x_16))))
(assert (forall ((x_16 Heap_0) (x_12 Nat_0) (x_13 Nat_0) (x_14 Heap_0) (x_15 Heap_0))
	(=> (= x_16 (heap_0 x_12 x_13 x_14 x_15))
	    (hleft_1 x_14 x_16))))
(assert (forall ((x_16 Heap_0) (x_12 Nat_0) (x_13 Nat_0) (x_14 Heap_0) (x_15 Heap_0))
	(=> (= x_16 (heap_0 x_12 x_13 x_14 x_15))
	    (hright_1 x_15 x_16))))
(assert (ishleaf_0 hleaf_0))
(assert (forall ((x_17 Nat_0) (x_18 Nat_0) (x_19 Heap_0) (x_20 Heap_0))
	(isheap_0 (heap_0 x_17 x_18 x_19 x_20))))
(assert (forall ((x_21 Nat_0) (x_22 Nat_0) (x_23 Heap_0) (x_24 Heap_0))
	(diseqHeap_0 hleaf_0 (heap_0 x_21 x_22 x_23 x_24))))
(assert (forall ((x_25 Nat_0) (x_26 Nat_0) (x_27 Heap_0) (x_28 Heap_0))
	(diseqHeap_0 (heap_0 x_25 x_26 x_27 x_28) hleaf_0)))
(assert (forall ((x_29 Nat_0) (x_30 Nat_0) (x_31 Heap_0) (x_32 Heap_0) (x_33 Nat_0) (x_34 Nat_0) (x_35 Heap_0) (x_36 Heap_0))
	(=> (diseqNat_0 x_29 x_33)
	    (diseqHeap_0 (heap_0 x_29 x_30 x_31 x_32) (heap_0 x_33 x_34 x_35 x_36)))))
(assert (forall ((x_29 Nat_0) (x_30 Nat_0) (x_31 Heap_0) (x_32 Heap_0) (x_33 Nat_0) (x_34 Nat_0) (x_35 Heap_0) (x_36 Heap_0))
	(=> (diseqNat_0 x_30 x_34)
	    (diseqHeap_0 (heap_0 x_29 x_30 x_31 x_32) (heap_0 x_33 x_34 x_35 x_36)))))
(assert (forall ((x_29 Nat_0) (x_30 Nat_0) (x_31 Heap_0) (x_32 Heap_0) (x_33 Nat_0) (x_34 Nat_0) (x_35 Heap_0) (x_36 Heap_0))
	(=> (diseqHeap_0 x_31 x_35)
	    (diseqHeap_0 (heap_0 x_29 x_30 x_31 x_32) (heap_0 x_33 x_34 x_35 x_36)))))
(assert (forall ((x_29 Nat_0) (x_30 Nat_0) (x_31 Heap_0) (x_32 Heap_0) (x_33 Nat_0) (x_34 Nat_0) (x_35 Heap_0) (x_36 Heap_0))
	(=> (diseqHeap_0 x_32 x_36)
	    (diseqHeap_0 (heap_0 x_29 x_30 x_31 x_32) (heap_0 x_33 x_34 x_35 x_36)))))
(declare-fun hsize_0 (Heap_0 Nat_0) Bool)
(assert (hsize_0 hleaf_0 Z_0))
(assert (forall ((k_0 Nat_0) (v_0 Nat_0) (l_0 Heap_0) (r_0 Heap_0) (m_0 Heap_0) (sl_0 Nat_0) (sr_0 Nat_0) (x_1 Nat_0) (x_2 Nat_0))
	(=>	(and (add_0 x_1 sl_0 sr_0)
			(add_0 x_2 (S_0 Z_0) x_1)
			(= m_0 (heap_0 k_0 v_0 l_0 r_0))
			(hsize_0 l_0 sl_0)
			(hsize_0 r_0 sr_0))
		(hsize_0 m_0 x_2))))
(assert (forall ((s_0 Nat_0) (m_1 Heap_0))
	(=>	(and (hsize_0 m_1 s_0)
			(lt_0 s_0 Z_0))
		false)))
(check-sat)
