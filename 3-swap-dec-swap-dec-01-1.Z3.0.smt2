(set-logic HORN)
(declare-datatypes ((Nat_0 0)) (((Z_0 ) (S_0 (unS_0 Nat_0)))))
(declare-fun diseqNat_0 (Nat_0 Nat_0) Bool)
(declare-fun unS_1 (Nat_0 Nat_0) Bool)
(declare-fun isZ_0 (Nat_0) Bool)
(declare-fun isS_0 (Nat_0) Bool)
(assert (forall ((x_86 Nat_0) (x_85 Nat_0))
	(=> (= x_86 (S_0 x_85))
	    (unS_1 x_85 x_86))))
(assert (isZ_0 Z_0))
(assert (forall ((x_87 Nat_0))
	(isS_0 (S_0 x_87))))
(assert (forall ((x_88 Nat_0))
	(diseqNat_0 Z_0 (S_0 x_88))))
(assert (forall ((x_89 Nat_0))
	(diseqNat_0 (S_0 x_89) Z_0)))
(assert (forall ((x_90 Nat_0) (x_91 Nat_0))
	(=> (diseqNat_0 x_90 x_91)
	    (diseqNat_0 (S_0 x_90) (S_0 x_91)))))
(declare-fun add_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun minus_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun le_0 (Nat_0 Nat_0) Bool)
(declare-fun ge_0 (Nat_0 Nat_0) Bool)
(declare-fun lt_0 (Nat_0 Nat_0) Bool)
(declare-fun gt_0 (Nat_0 Nat_0) Bool)
(declare-fun mult_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun div_0 (Nat_0 Nat_0 Nat_0) Bool)
(declare-fun mod_0 (Nat_0 Nat_0 Nat_0) Bool)
(assert (forall ((y_0 Nat_0))
	(add_0 y_0 Z_0 y_0)))
(assert (forall ((x_78 Nat_0) (y_0 Nat_0) (r_0 Nat_0))
	(=> (add_0 r_0 x_78 y_0)
	    (add_0 (S_0 r_0) (S_0 x_78) y_0))))
(assert (forall ((y_0 Nat_0))
	(minus_0 Z_0 Z_0 y_0)))
(assert (forall ((x_78 Nat_0) (y_0 Nat_0) (r_0 Nat_0))
	(=> (minus_0 r_0 x_78 y_0)
	    (minus_0 (S_0 r_0) (S_0 x_78) y_0))))
(assert (forall ((y_0 Nat_0))
	(le_0 Z_0 y_0)))
(assert (forall ((x_78 Nat_0) (y_0 Nat_0))
	(=> (le_0 x_78 y_0)
	    (le_0 (S_0 x_78) (S_0 y_0)))))
(assert (forall ((y_0 Nat_0))
	(ge_0 y_0 Z_0)))
(assert (forall ((x_78 Nat_0) (y_0 Nat_0))
	(=> (ge_0 x_78 y_0)
	    (ge_0 (S_0 x_78) (S_0 y_0)))))
(assert (forall ((y_0 Nat_0))
	(lt_0 Z_0 (S_0 y_0))))
(assert (forall ((x_78 Nat_0) (y_0 Nat_0))
	(=> (lt_0 x_78 y_0)
	    (lt_0 (S_0 x_78) (S_0 y_0)))))
(assert (forall ((y_0 Nat_0))
	(gt_0 (S_0 y_0) Z_0)))
(assert (forall ((x_78 Nat_0) (y_0 Nat_0))
	(=> (gt_0 x_78 y_0)
	    (gt_0 (S_0 x_78) (S_0 y_0)))))
(assert (forall ((y_0 Nat_0))
	(mult_0 Z_0 Z_0 y_0)))
(assert (forall ((x_78 Nat_0) (y_0 Nat_0) (r_0 Nat_0) (z_1 Nat_0))
	(=>	(and (mult_0 r_0 x_78 y_0)
			(add_0 z_1 r_0 y_0))
		(mult_0 z_1 (S_0 x_78) y_0))))
(assert (forall ((x_78 Nat_0) (y_0 Nat_0))
	(=> (lt_0 x_78 y_0)
	    (div_0 Z_0 x_78 y_0))))
(assert (forall ((x_78 Nat_0) (y_0 Nat_0) (r_0 Nat_0) (z_1 Nat_0))
	(=>	(and (ge_0 x_78 y_0)
			(minus_0 z_1 x_78 y_0)
			(div_0 r_0 z_1 y_0))
		(div_0 (S_0 r_0) x_78 y_0))))
(assert (forall ((x_78 Nat_0) (y_0 Nat_0))
	(=> (lt_0 x_78 y_0)
	    (mod_0 x_78 x_78 y_0))))
(assert (forall ((x_78 Nat_0) (y_0 Nat_0) (r_0 Nat_0) (z_1 Nat_0))
	(=>	(and (ge_0 x_78 y_0)
			(minus_0 z_1 x_78 y_0)
			(mod_0 r_0 z_1 y_0))
		(mod_0 r_0 x_78 y_0))))
(declare-fun and_0 (Bool Bool Bool) Bool)
(declare-fun or_0 (Bool Bool Bool) Bool)
(declare-fun hence_0 (Bool Bool Bool) Bool)
(declare-fun not_0 (Bool Bool) Bool)
(assert (and_0 false false false))
(assert (and_0 false true false))
(assert (and_0 false false true))
(assert (and_0 true true true))
(assert (or_0 false false false))
(assert (or_0 true true false))
(assert (or_0 true false true))
(assert (or_0 true true true))
(assert (hence_0 true false false))
(assert (hence_0 false true false))
(assert (hence_0 true false true))
(assert (hence_0 true true true))
(assert (not_0 true false))
(assert (not_0 false true))
(declare-datatypes ((MutInt_0 0)) (((mutInt_1 (curInt_0 Nat_0) (retInt_0 Nat_0)))))
(declare-fun diseqMutInt_0 (MutInt_0 MutInt_0) Bool)
(declare-fun curInt_1 (Nat_0 MutInt_0) Bool)
(declare-fun retInt_1 (Nat_0 MutInt_0) Bool)
(declare-fun ismutInt_0 (MutInt_0) Bool)
(assert (forall ((x_94 MutInt_0) (x_92 Nat_0) (x_93 Nat_0))
	(=> (= x_94 (mutInt_1 x_92 x_93))
	    (curInt_1 x_92 x_94))))
(assert (forall ((x_94 MutInt_0) (x_92 Nat_0) (x_93 Nat_0))
	(=> (= x_94 (mutInt_1 x_92 x_93))
	    (retInt_1 x_93 x_94))))
(assert (forall ((x_95 Nat_0) (x_96 Nat_0))
	(ismutInt_0 (mutInt_1 x_95 x_96))))
(assert (forall ((x_97 Nat_0) (x_98 Nat_0) (x_99 Nat_0) (x_100 Nat_0))
	(=> (diseqNat_0 x_97 x_99)
	    (diseqMutInt_0 (mutInt_1 x_97 x_98) (mutInt_1 x_99 x_100)))))
(assert (forall ((x_97 Nat_0) (x_98 Nat_0) (x_99 Nat_0) (x_100 Nat_0))
	(=> (diseqNat_0 x_98 x_100)
	    (diseqMutInt_0 (mutInt_1 x_97 x_98) (mutInt_1 x_99 x_100)))))
(declare-datatypes ((MutMutInt_0 0)) (((mutMutInt_1 (curMutInt_0 MutInt_0) (retMutInt_0 MutInt_0)))))
(declare-fun diseqMutMutInt_0 (MutMutInt_0 MutMutInt_0) Bool)
(declare-fun curMutInt_1 (MutInt_0 MutMutInt_0) Bool)
(declare-fun retMutInt_1 (MutInt_0 MutMutInt_0) Bool)
(declare-fun ismutMutInt_0 (MutMutInt_0) Bool)
(assert (forall ((x_103 MutMutInt_0) (x_101 MutInt_0) (x_102 MutInt_0))
	(=> (= x_103 (mutMutInt_1 x_101 x_102))
	    (curMutInt_1 x_101 x_103))))
(assert (forall ((x_103 MutMutInt_0) (x_101 MutInt_0) (x_102 MutInt_0))
	(=> (= x_103 (mutMutInt_1 x_101 x_102))
	    (retMutInt_1 x_102 x_103))))
(assert (forall ((x_104 MutInt_0) (x_105 MutInt_0))
	(ismutMutInt_0 (mutMutInt_1 x_104 x_105))))
(assert (forall ((x_106 MutInt_0) (x_107 MutInt_0) (x_108 MutInt_0) (x_109 MutInt_0))
	(=> (diseqMutInt_0 x_106 x_108)
	    (diseqMutMutInt_0 (mutMutInt_1 x_106 x_107) (mutMutInt_1 x_108 x_109)))))
(assert (forall ((x_106 MutInt_0) (x_107 MutInt_0) (x_108 MutInt_0) (x_109 MutInt_0))
	(=> (diseqMutInt_0 x_107 x_109)
	    (diseqMutMutInt_0 (mutMutInt_1 x_106 x_107) (mutMutInt_1 x_108 x_109)))))
(declare-fun main_0 (Bool) Bool)
(declare-fun main_1 (Nat_0 Nat_0 Nat_0 Nat_0 MutInt_0 MutInt_0 MutInt_0 Bool Bool) Bool)
(declare-fun swapdecthree_0 (MutMutInt_0 MutMutInt_0 MutMutInt_0) Bool)
(declare-fun main_2 (Bool Bool) Bool)
(declare-fun main_3 (Nat_0 Nat_0 Nat_0 Nat_0 MutInt_0 MutInt_0 MutInt_0 Bool Bool Bool) Bool)
(declare-fun mayswapMutInt_0 (MutMutInt_0 MutMutInt_0) Bool)
(declare-fun mayswapMutInt_1 (MutMutInt_0 MutMutInt_0 Bool) Bool)
(declare-fun swapdecthree_1 (MutMutInt_0 MutMutInt_0 MutMutInt_0 Bool) Bool)
(assert (forall ((x_0 Bool) (x_1 Nat_0) (x_2 Nat_0) (x_3 Nat_0) (x_4 Nat_0) (x_5 Nat_0) (x_6 Nat_0) (x_7 MutInt_0) (x_8 MutInt_0) (x_9 MutInt_0) (x_10 MutInt_0) (x_11 MutInt_0) (x_12 MutInt_0))
	(=>	(and (swapdecthree_0 (mutMutInt_1 (mutInt_1 x_1 x_4) x_8) (mutMutInt_1 (mutInt_1 x_2 x_5) x_10) (mutMutInt_1 (mutInt_1 x_3 x_6) x_12))
			(= x_11 x_12)
			(= x_9 x_10)
			(= x_7 x_8)
			(main_1 x_4 x_5 x_6 x_1 x_7 x_9 x_11 true x_0)
			(ge_0 x_1 x_4))
		(main_0 x_0))))
(assert (forall ((x_0 Bool) (x_1 Nat_0) (x_2 Nat_0) (x_3 Nat_0) (x_4 Nat_0) (x_5 Nat_0) (x_6 Nat_0) (x_7 MutInt_0) (x_8 MutInt_0) (x_9 MutInt_0) (x_10 MutInt_0) (x_11 MutInt_0) (x_12 MutInt_0))
	(=>	(and (swapdecthree_0 (mutMutInt_1 (mutInt_1 x_1 x_4) x_8) (mutMutInt_1 (mutInt_1 x_2 x_5) x_10) (mutMutInt_1 (mutInt_1 x_3 x_6) x_12))
			(= x_11 x_12)
			(= x_9 x_10)
			(= x_7 x_8)
			(main_1 x_4 x_5 x_6 x_1 x_7 x_9 x_11 false x_0)
			(lt_0 x_1 x_4))
		(main_0 x_0))))
(assert (forall ((x_13 Nat_0) (x_14 Nat_0) (x_15 Nat_0) (x_16 Nat_0) (x_17 MutInt_0) (x_18 MutInt_0) (x_19 MutInt_0) (x_20 Bool) (x_110 Nat_0) (x_111 Nat_0) (x_112 Nat_0) (x_113 Nat_0) (x_114 Nat_0) (x_115 Nat_0))
	(=>	(and (= x_110 x_111)
			(= x_112 x_113)
			(= x_114 x_115)
			(main_2 true x_20)
			(retInt_1 x_110 x_17)
			(curInt_1 x_111 x_17)
			(retInt_1 x_112 x_18)
			(curInt_1 x_113 x_18)
			(retInt_1 x_114 x_19)
			(curInt_1 x_115 x_19))
		(main_1 x_13 x_14 x_15 x_16 x_17 x_18 x_19 false x_20))))
(assert (forall ((x_21 Nat_0) (x_22 Nat_0) (x_23 Nat_0) (x_24 Nat_0) (x_25 MutInt_0) (x_26 MutInt_0) (x_27 MutInt_0) (x_28 Bool) (x_79 Nat_0))
	(=>	(and (main_3 x_21 x_22 x_23 x_24 x_25 x_26 x_27 true true x_28)
			(le_0 x_79 (S_0 (S_0 (S_0 Z_0))))
			(minus_0 x_79 x_24 x_21))
		(main_1 x_21 x_22 x_23 x_24 x_25 x_26 x_27 true x_28))))
(assert (forall ((x_21 Nat_0) (x_22 Nat_0) (x_23 Nat_0) (x_24 Nat_0) (x_25 MutInt_0) (x_26 MutInt_0) (x_27 MutInt_0) (x_28 Bool) (x_80 Nat_0))
	(=>	(and (main_3 x_21 x_22 x_23 x_24 x_25 x_26 x_27 true false x_28)
			(gt_0 x_80 (S_0 (S_0 (S_0 Z_0))))
			(minus_0 x_80 x_24 x_21))
		(main_1 x_21 x_22 x_23 x_24 x_25 x_26 x_27 true x_28))))
(assert (forall ((x_29 Nat_0) (x_30 Nat_0) (x_31 Nat_0) (x_32 Nat_0) (x_33 MutInt_0) (x_34 MutInt_0) (x_35 MutInt_0) (x_36 Bool) (x_37 Bool) (x_116 Nat_0) (x_117 Nat_0) (x_118 Nat_0) (x_119 Nat_0) (x_120 Nat_0) (x_121 Nat_0))
	(=>	(and (= x_116 x_117)
			(= x_118 x_119)
			(= x_120 x_121)
			(main_2 true x_37)
			(retInt_1 x_116 x_33)
			(curInt_1 x_117 x_33)
			(retInt_1 x_118 x_34)
			(curInt_1 x_119 x_34)
			(retInt_1 x_120 x_35)
			(curInt_1 x_121 x_35))
		(main_3 x_29 x_30 x_31 x_32 x_33 x_34 x_35 x_36 false x_37))))
(assert (forall ((x_38 Nat_0) (x_39 Nat_0) (x_40 Nat_0) (x_41 Nat_0) (x_42 MutInt_0) (x_43 MutInt_0) (x_44 MutInt_0) (x_45 Bool) (x_46 Bool) (x_122 Nat_0) (x_123 Nat_0) (x_124 Nat_0) (x_125 Nat_0) (x_126 Nat_0) (x_127 Nat_0))
	(=>	(and (= x_122 x_123)
			(= x_124 x_125)
			(= x_126 x_127)
			(main_2 false x_46)
			(retInt_1 x_122 x_42)
			(curInt_1 x_123 x_42)
			(retInt_1 x_124 x_43)
			(curInt_1 x_125 x_43)
			(retInt_1 x_126 x_44)
			(curInt_1 x_127 x_44))
		(main_3 x_38 x_39 x_40 x_41 x_42 x_43 x_44 x_45 true x_46))))
(assert (forall ((x_47 Bool))
	(=> (= x_47 false)
	    (main_2 false x_47))))
(assert (forall ((x_48 Bool))
	(=> (= x_48 true)
	    (main_2 true x_48))))
(assert (forall ((x_49 MutMutInt_0) (x_50 MutMutInt_0) (x_51 Bool))
	(=> (mayswapMutInt_1 x_49 x_50 x_51)
	    (mayswapMutInt_0 x_49 x_50))))
(assert (forall ((x_52 MutMutInt_0) (x_53 MutMutInt_0) (x_128 MutInt_0) (x_129 MutInt_0) (x_130 MutInt_0) (x_131 MutInt_0))
	(=>	(and (= x_128 x_129)
			(= x_130 x_131)
			(retMutInt_1 x_128 x_53)
			(curMutInt_1 x_129 x_53)
			(retMutInt_1 x_130 x_52)
			(curMutInt_1 x_131 x_52))
		(mayswapMutInt_1 x_52 x_53 false))))
(assert (forall ((x_54 MutMutInt_0) (x_55 MutMutInt_0) (x_56 MutInt_0) (x_57 MutInt_0) (x_132 MutInt_0) (x_133 MutInt_0) (x_134 MutInt_0) (x_135 MutInt_0))
	(=>	(and (= x_57 x_132)
			(= x_56 x_133)
			(= x_134 x_57)
			(= x_135 x_56)
			(curMutInt_1 x_132 x_54)
			(curMutInt_1 x_133 x_55)
			(retMutInt_1 x_134 x_55)
			(retMutInt_1 x_135 x_54))
		(mayswapMutInt_1 x_54 x_55 true))))
(assert (forall ((x_58 MutMutInt_0) (x_59 MutMutInt_0) (x_60 MutMutInt_0) (x_61 Bool) (x_62 MutInt_0) (x_63 MutInt_0) (x_64 MutInt_0) (x_65 MutInt_0) (x_66 MutInt_0) (x_67 MutInt_0) (x_136 MutInt_0) (x_137 MutInt_0) (x_138 MutInt_0) (x_139 MutInt_0) (x_140 MutInt_0) (x_141 MutInt_0))
	(=>	(and (mayswapMutInt_0 (mutMutInt_1 x_136 x_62) (mutMutInt_1 x_137 x_63))
			(mayswapMutInt_0 (mutMutInt_1 x_63 x_64) (mutMutInt_1 x_138 x_65))
			(mayswapMutInt_0 (mutMutInt_1 x_62 x_66) (mutMutInt_1 x_64 x_67))
			(swapdecthree_1 (mutMutInt_1 x_66 x_139) (mutMutInt_1 x_67 x_140) (mutMutInt_1 x_65 x_141) x_61)
			(curMutInt_1 x_136 x_58)
			(curMutInt_1 x_137 x_59)
			(curMutInt_1 x_138 x_60)
			(retMutInt_1 x_139 x_58)
			(retMutInt_1 x_140 x_59)
			(retMutInt_1 x_141 x_60))
		(swapdecthree_0 x_58 x_59 x_60))))
(assert (forall ((x_68 MutMutInt_0) (x_69 MutMutInt_0) (x_70 MutMutInt_0) (x_71 MutInt_0) (x_72 MutInt_0) (x_73 MutInt_0) (a_3 MutInt_0) (a_4 MutInt_0) (a_5 MutInt_0) (x_81 Nat_0) (x_82 Nat_0) (x_83 Nat_0) (x_142 MutInt_0) (x_143 MutInt_0) (x_144 MutInt_0) (x_145 MutInt_0) (x_146 Nat_0) (x_147 MutInt_0) (x_148 Nat_0) (x_149 MutInt_0) (x_150 Nat_0) (x_151 MutInt_0) (x_152 Nat_0) (x_153 MutInt_0) (x_154 Nat_0) (x_155 MutInt_0) (x_156 Nat_0))
	(=>	(and (swapdecthree_0 (mutMutInt_1 a_3 x_71) (mutMutInt_1 a_4 x_72) (mutMutInt_1 a_5 x_73))
			(= x_142 x_72)
			(= x_143 x_71)
			(= x_144 x_73)
			(= a_3 (mutInt_1 x_81 x_146))
			(= a_4 (mutInt_1 x_82 x_148))
			(= a_5 (mutInt_1 x_83 x_150))
			(minus_0 x_81 x_152 (S_0 Z_0))
			(minus_0 x_82 x_154 (S_0 (S_0 Z_0)))
			(minus_0 x_83 x_156 (S_0 (S_0 (S_0 Z_0))))
			(retMutInt_1 x_142 x_69)
			(retMutInt_1 x_143 x_68)
			(retMutInt_1 x_144 x_70)
			(curMutInt_1 x_145 x_68)
			(retInt_1 x_146 x_145)
			(curMutInt_1 x_147 x_69)
			(retInt_1 x_148 x_147)
			(curMutInt_1 x_149 x_70)
			(retInt_1 x_150 x_149)
			(curMutInt_1 x_151 x_68)
			(curInt_1 x_152 x_151)
			(curMutInt_1 x_153 x_69)
			(curInt_1 x_154 x_153)
			(curMutInt_1 x_155 x_70)
			(curInt_1 x_156 x_155))
		(swapdecthree_1 x_68 x_69 x_70 false))))
(assert (forall ((x_74 MutMutInt_0) (x_75 MutMutInt_0) (x_76 MutMutInt_0) (x_157 MutInt_0) (x_158 MutInt_0) (x_159 MutInt_0) (x_160 MutInt_0) (x_161 MutInt_0) (x_162 MutInt_0))
	(=>	(and (= x_157 x_158)
			(= x_159 x_160)
			(= x_161 x_162)
			(retMutInt_1 x_157 x_75)
			(curMutInt_1 x_158 x_75)
			(retMutInt_1 x_159 x_74)
			(curMutInt_1 x_160 x_74)
			(retMutInt_1 x_161 x_76)
			(curMutInt_1 x_162 x_76))
		(swapdecthree_1 x_74 x_75 x_76 true))))
(assert (forall ((x_77 Nat_0))
	(=> (main_0 true)
	    false)))
(check-sat)
